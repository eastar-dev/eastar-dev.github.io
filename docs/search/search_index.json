{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Blog \uc0ac\uc6a9\uc124\uba85\uc11c # Create: 2021\ub144 9\uc6d4 12\uc77c \uc624\ud6c4 10:00 \ube14\ub85c\uadf8\uc5d0 \ubb34\uc2a8 \uc0ac\uc6a9\uc124\uba85\uc11c\uac00 \ud544\uc694\ud560\uae4c \uc2f6\uc9c0\ub9cc \uac1c\ubc1c \ube14\ub85c\uadf8\ub77c\ub294 \ubaa9\uc801\uc774 \uc788\uc5b4 \uba85\ud655\ud55c \ud45c\ud604\ubc29\uc2dd\uc5d0 \uaddc\uce59\uc744 \uc774\uc6a9\ud574\uc11c \ub9cc\ub4e4\ub824\uace0 \ud55c\ub2e4. \uc774\uc5d0 Blog \uc0ac\uc6a9 \uc124\uba85\uc11c\ub97c \ub9cc\ub4e4\uc5b4 \ubcf4\ub294 \uc774\ub4e4\uc5d0 \ub3c4\uc6c0\uc744 \uc8fc\uace0\uc790 \ud55c\ub2e4. \uac1c\ubc1c\uc11c\uc801\uc744 \ubcf4\uba74 \ucc45\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ud45c\ud604 \ubc29\ubc95\ub4e4\uc744 \uc774\uc57c\uae30 \ud55c\uac83\uacfc \ube44\uc2b7\ud558\ub2e4\uace0 \uc0dd\uac01\ud558\uba74 \ub420\uac83 \uac19\ub2e4. \ubaa9\ucc28 # \ubaa8\ub4e0 \ubaa9\ucc28\ub294 \uc81c\ubaa91 \uc774\ub77c\ub294 \ud45c\ud604\ud615\uc2dd\uc73c\ub85c \ud45c\ud604\ub429\ub2c8\ub2e4. \ube14\ub85c\uadf8\uc5d0\uc11c\ub294 \uc81c\ubaa9 \ub2e4\uc74c\uc73c\ub85c \uac00\uc7a5 \ud070\uae00\uc528 \uc785\ub2c8\ub2e4. \ubaa9\ucc28\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uad6c\uc131\uc744 \uac19\uc2b5\ub2c8\ub2e4. \uac1c\uc694 \ubc0f \uc774\ub860\uc801\uc740 \ub0b4\uc6a9 \uc774\uac83\uc744 \uace0\ubbfc\ud558\uac8c\ub41c \uc774\uc720 Step By Step : \ub530\ub77c\ud558\uae30 Troubleshooting : \ud558\uba74\uc11c \uc0bd\uc9c8 \ud588\ub358\uac83 \uc5d0\ub7ec\ub098\ub294\uac83\ub4e4\uc744 \uc815\ub9ac TL;DR : \uc2e4\uc9c8\uc801\uc778 \ucf54\ub4dc\ubd80\ubd84, \ube60\ub978 \uc0ac\uc6a9\uc744 \uc704\ud55c \ud575\uc2ec\ub0b4\uc6a9 \uc8fc\uc758\uc0ac\ud56d # Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \ub530\ub77c\ud558\uae30\uc774\ubbf8\uc9c0 # \uc5ec\uae30\ub97c \ub20c\ub7ec\uc11c \ud655\uc778 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \ucf54\ub4dc # //\uc9c1\uc811\uc801\uc73c\ub85c \uc785\ub825 \ud574\uc57c \ud558\ub294 \uba85\ub839\ub4e4\uc744 \uc5ec\uae30\uc5d0 \ud45c\uae30 \ud569\ub2c8\ub2e4. #!/bin/bash clear StartTime = $( date +%s ) this_folder = $( pwd ) username = \"your's name\" useremail = \"you@are-mail.com\" commit_msg = \" $( date '+%Y%m%d%H%M%S' ) \" work_dir = /Users/ ${ USER } /work source_name = android_org source_dir = ${ work_dir } / ${ source_name } function sync_bit () { if [ ! -d \" $target_dir /\" ] ; then cd ${ work_dir } || exit $target_clone fi cd \" ${ target_dir } \" || exit git pull git config user.name \" $username \" git config user.email \" $useremail \" rsync -vah --delete --exclude = .git --exclude-from = ${ source_dir } /.gitignore ${ source_dir } / ${ target_dir } cd \" ${ target_dir } \" || exit git add . git commit -m \" $commit_msg \" git push } C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } \uc778\uc6a9 # \uc2e4\ud589\uc758 \uacb0\uacfc\ubb3c output \ub4f1\uc744 \uc778\uc6a9\uc744 \ud1b5\ud574 \ud45c\uc2dc\ud569\ub2c8\ub2e4. \ucf54\ub4dc\uc5d0 \uc717\ubd80\ubd84\uc740 \ub0b4\uc6a9\uc774 \ub4e4\uc5b4\uac00\uc57c \ud558\ub294 \ud30c\uc77c, \ucf58\uc194, \ub4f1\uc774 \ud45c\ud604\ub418\uace0 \ucf54\ub4dc \ub0b4\ubd80\ub294 \uc9c1\uc811\uc801\uc73c\ub85c \ubd99\uc5ec \ub123\uae30\uc5d0 \uc801\ud569\ud55c \ub0b4\uc6a9\ub9cc \ub4e4\uc5b4\uac11\ub2c8\ub2e4. \uc608\uc2dc D:\\blog>\uc5d0\uc11c \uc785\ub825 dir D \ub4dc\ub77c\uc774\ube0c\uc758 \ubcfc\ub968\uc5d0\ub294 \uc774\ub984\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \ubcfc\ub968 \uc77c\ub828 \ubc88\ud638: A00E-09BF D:\\blog \ub514\ub809\ud130\ub9ac 2021-09-12 \uc624\uc804 04:10 <DIR> . 2021-09-12 \uc624\uc804 04:10 <DIR> .. ... 2021-09-12 \uc624\uc804 03:51 2,653 _config.yml 6\uac1c \ud30c\uc77c 195,658 \ubc14\uc774\ud2b8 9\uac1c \ub514\ub809\ud130\ub9ac 81,542,119,424 \ubc14\uc774\ud2b8 \ub0a8\uc74c","title":"Blog \uc0ac\uc6a9\uc124\uba85\uc11c"},{"location":"#blog","text":"Create: 2021\ub144 9\uc6d4 12\uc77c \uc624\ud6c4 10:00 \ube14\ub85c\uadf8\uc5d0 \ubb34\uc2a8 \uc0ac\uc6a9\uc124\uba85\uc11c\uac00 \ud544\uc694\ud560\uae4c \uc2f6\uc9c0\ub9cc \uac1c\ubc1c \ube14\ub85c\uadf8\ub77c\ub294 \ubaa9\uc801\uc774 \uc788\uc5b4 \uba85\ud655\ud55c \ud45c\ud604\ubc29\uc2dd\uc5d0 \uaddc\uce59\uc744 \uc774\uc6a9\ud574\uc11c \ub9cc\ub4e4\ub824\uace0 \ud55c\ub2e4. \uc774\uc5d0 Blog \uc0ac\uc6a9 \uc124\uba85\uc11c\ub97c \ub9cc\ub4e4\uc5b4 \ubcf4\ub294 \uc774\ub4e4\uc5d0 \ub3c4\uc6c0\uc744 \uc8fc\uace0\uc790 \ud55c\ub2e4. \uac1c\ubc1c\uc11c\uc801\uc744 \ubcf4\uba74 \ucc45\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ud45c\ud604 \ubc29\ubc95\ub4e4\uc744 \uc774\uc57c\uae30 \ud55c\uac83\uacfc \ube44\uc2b7\ud558\ub2e4\uace0 \uc0dd\uac01\ud558\uba74 \ub420\uac83 \uac19\ub2e4.","title":"Blog \uc0ac\uc6a9\uc124\uba85\uc11c"},{"location":"#_1","text":"\ubaa8\ub4e0 \ubaa9\ucc28\ub294 \uc81c\ubaa91 \uc774\ub77c\ub294 \ud45c\ud604\ud615\uc2dd\uc73c\ub85c \ud45c\ud604\ub429\ub2c8\ub2e4. \ube14\ub85c\uadf8\uc5d0\uc11c\ub294 \uc81c\ubaa9 \ub2e4\uc74c\uc73c\ub85c \uac00\uc7a5 \ud070\uae00\uc528 \uc785\ub2c8\ub2e4. \ubaa9\ucc28\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uad6c\uc131\uc744 \uac19\uc2b5\ub2c8\ub2e4. \uac1c\uc694 \ubc0f \uc774\ub860\uc801\uc740 \ub0b4\uc6a9 \uc774\uac83\uc744 \uace0\ubbfc\ud558\uac8c\ub41c \uc774\uc720 Step By Step : \ub530\ub77c\ud558\uae30 Troubleshooting : \ud558\uba74\uc11c \uc0bd\uc9c8 \ud588\ub358\uac83 \uc5d0\ub7ec\ub098\ub294\uac83\ub4e4\uc744 \uc815\ub9ac TL;DR : \uc2e4\uc9c8\uc801\uc778 \ucf54\ub4dc\ubd80\ubd84, \ube60\ub978 \uc0ac\uc6a9\uc744 \uc704\ud55c \ud575\uc2ec\ub0b4\uc6a9","title":"\ubaa9\ucc28"},{"location":"#_2","text":"Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"\uc8fc\uc758\uc0ac\ud56d"},{"location":"#_3","text":"\uc5ec\uae30\ub97c \ub20c\ub7ec\uc11c \ud655\uc778 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"\ub530\ub77c\ud558\uae30\uc774\ubbf8\uc9c0"},{"location":"#_4","text":"//\uc9c1\uc811\uc801\uc73c\ub85c \uc785\ub825 \ud574\uc57c \ud558\ub294 \uba85\ub839\ub4e4\uc744 \uc5ec\uae30\uc5d0 \ud45c\uae30 \ud569\ub2c8\ub2e4. #!/bin/bash clear StartTime = $( date +%s ) this_folder = $( pwd ) username = \"your's name\" useremail = \"you@are-mail.com\" commit_msg = \" $( date '+%Y%m%d%H%M%S' ) \" work_dir = /Users/ ${ USER } /work source_name = android_org source_dir = ${ work_dir } / ${ source_name } function sync_bit () { if [ ! -d \" $target_dir /\" ] ; then cd ${ work_dir } || exit $target_clone fi cd \" ${ target_dir } \" || exit git pull git config user.name \" $username \" git config user.email \" $useremail \" rsync -vah --delete --exclude = .git --exclude-from = ${ source_dir } /.gitignore ${ source_dir } / ${ target_dir } cd \" ${ target_dir } \" || exit git add . git commit -m \" $commit_msg \" git push } C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; }","title":"\ucf54\ub4dc"},{"location":"#_5","text":"\uc2e4\ud589\uc758 \uacb0\uacfc\ubb3c output \ub4f1\uc744 \uc778\uc6a9\uc744 \ud1b5\ud574 \ud45c\uc2dc\ud569\ub2c8\ub2e4. \ucf54\ub4dc\uc5d0 \uc717\ubd80\ubd84\uc740 \ub0b4\uc6a9\uc774 \ub4e4\uc5b4\uac00\uc57c \ud558\ub294 \ud30c\uc77c, \ucf58\uc194, \ub4f1\uc774 \ud45c\ud604\ub418\uace0 \ucf54\ub4dc \ub0b4\ubd80\ub294 \uc9c1\uc811\uc801\uc73c\ub85c \ubd99\uc5ec \ub123\uae30\uc5d0 \uc801\ud569\ud55c \ub0b4\uc6a9\ub9cc \ub4e4\uc5b4\uac11\ub2c8\ub2e4. \uc608\uc2dc D:\\blog>\uc5d0\uc11c \uc785\ub825 dir D \ub4dc\ub77c\uc774\ube0c\uc758 \ubcfc\ub968\uc5d0\ub294 \uc774\ub984\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \ubcfc\ub968 \uc77c\ub828 \ubc88\ud638: A00E-09BF D:\\blog \ub514\ub809\ud130\ub9ac 2021-09-12 \uc624\uc804 04:10 <DIR> . 2021-09-12 \uc624\uc804 04:10 <DIR> .. ... 2021-09-12 \uc624\uc804 03:51 2,653 _config.yml 6\uac1c \ud30c\uc77c 195,658 \ubc14\uc774\ud2b8 9\uac1c \ub514\ub809\ud130\ub9ac 81,542,119,424 \ubc14\uc774\ud2b8 \ub0a8\uc74c","title":"\uc778\uc6a9"},{"location":"LocalDateTime%207795ab14786e4b0db7cb658cdae2eb26/","text":"LocalDateTime # Create: 2021\ub144 10\uc6d4 1\uc77c \uc624\ud6c4 12:52 Tag: android \uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0\uc11c \uc2dc\uac04\ud45c\uc2dc \ubc29\ubc95 # https://developer.android.com/reference/java/time/package-summary \uc548\ub4dc\ub85c\uc774\ub4dc 26\uc5d0\uc11c \ubd80\ud130 \uc0c8\ub85c \ucd94\uac00\ub41c LocalDateTime\uc744 \uae30\uc900\uc73c\ub85c \uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0 \uc2dc\uac04 \ud45c\uc2dc \ubc29\ubc95\uc5d0 \ub300\ud558\uc5ec \uc774\uc57c\uae30 \ud574\ubcf4\ub824\uace0 \ud55c\ub2e4. \uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0\uc11c \uc2dc\uac04 # currentTimeMillis # UTC 1970-01-01 00:00:00\uc744 \uae30\uc900\uc73c\ub85c \uc2dc\uc791\ud558\ub294 \uc2dc\uac04 \ubcc0\uc218\uac00 Long \uac12\uc5d0 \uc800\uc7a5\ub418\uae30 \ub54c\ubb38\uc5d0 \ub300\ub7b5 100\ub144\uc815\ub3c4\uc758 \uc2dc\uac04\uc744 \uae30\ub85d\ud560 \uc218 \uc788\ub2e4. milliseconds \ub2e8\uc704 System . currentTimeMillis () elapsedRealtime # \uc548\ub4dc\ub85c\uc774\ub4dc \uc2dc\uc791 \ud6c4 \uc9c0\uae08\uae4c\uc9c0\uc758 \ud758\ub7ec\uac04 \uc2dc\uac04 milliseconds \ub2e8\uc704 SystemClock . elapsedRealtime () LocalDateTime # ISO-8601 calendar system \uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ub0a0\uc9dc \uc2dc\uac04 \ud45c\uc2dc\ubc29\ubc95\uc774\ub2e4. 2007-12-03T10:15:30 \uc640 \uac19\uc774 \ud45c\uc2dc\ud558\ub294 \uac83\uc774 \ub300\ud45c\uc801\uc778 \ud45c\uc2dc\ubc29\ubc95\uc774\uace0 \uc774\ud45c\uae30\ubc95\uc5d0\ub294 \ud0c0\uc784\uc874\uc774 \ub4e4\uc5b4\uac00 \uc788\uc9c0 \uc54a\ub2e4. \uc5ec\uae30\uc11c \uc2dc\uac04\ub300\ub97c \ucd94\uac00, \ud0c0\uc784\uc874 \ucd94\uac00 \uc5ec\ubd80\uc5d0 \ub530\ub77c \uc0ac\uc6a9\ub418\ub294 class\uac00 OffsetDatatime, ZonedDataTime \ub4f1\uc73c\ub85c \ub2ec\ub77c\uc9c0\uac8c \ub418\uba70 System.currentTimeMillis()\uacfc\uc758 \uc0c1\ud638 \ubcc0\ud658\uc744 \uc704\ud55c class \ubc0f \uc2dc\uac04\uac04\uaca9, \uc2dc\uac04\uc8fc\uae30 \ub97c \ud45c\uc2dc\ud558\uae30\uc704\ud55c class\ub4e4\uc774 \ucd94\uac00\ub85c \uc788\ub2e4. Android SDK 26 \uc774\ud558\uc5d0\uc11c \uc0ac\uc6a9 # \uc6b0\uc120 \uc2dc\uc791\ud558\uae30 \uc804\uc5d0 \uc548\ub4dc\ub85c\uc774\ub4dc 26\uc5d0\uc11c \ucd94\uac00\ub41c\uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \uc548\ub4dc\ub85c\uc774\ub4dc 26\ubbf8\ub9cc\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud558\uc5ec \uc54c\uc544 \ubcf4\uc790. \uc544\uc9c1\uae4c\uc9c0\ub294 \ud544\uc694\ud55c \uc0ac\ud56d\uc774\ub2e4. ThreeThenABP # \uc774\uc804\uc5d0 \uc0ac\uc6a9\ud55c JakeWharton\ub2d8\uc758 \ub77c\uc774\ube0c\ub7ec\ub9ac\uac00 \uc788\uc9c0\ub9cc \uc5ec\uae30\uc11c\ub294 \ub2e4\ub978 \ubc29\ubc95\uc744 \uc18c\uac1c\ud55c\ub2e4. GitHub - JakeWharton/ThreeTenABP: An adaptation of the JSR-310 backport for Android. Java 8+ API \uc774\uc6a9 # \uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0\uc11c\ub294 Java 8+ API desugaring support (Android Gradle Plugin 4.0.0+)\ub97c \uc774\uc6a9\ud55c java.time.* \uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \ucf54\ub4dc\ub97c \uc0ac\uc6a9\ud560\uc218 \uc788\ub2e4. https://developer.android.com/studio/write/java8-support#library-desugaring \uc544\ub798\ucf54\ub4dc\ub97c \uc0bd\uc785\ud558\uba74 \uc0ac\uc6a9\ud560\uc218 \uc788\ub2e4. android { defaultConfig { multiDexEnabled true } compileOptions { coreLibraryDesugaringEnabled true sourceCompatibility JavaVersion . VERSION_1_8 targetCompatibility JavaVersion . VERSION_1_8 } kotlinOptions { jvmTarget = \"1.8\" } } dependencies { coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5' } Warning \uc0ac\uc6a9\ud574\ubcf8 \uacb0\uacfc\ub294 \ubaa8\ub4e0 \ud568\uc218\ub97c \uc9c0\uc6d0\ud558\uc9c0\ub294 \uc54a\ub294\ub2e4. https://developer.android.com/studio/write/java8-support-table TL;DR # gradle android { compileOptions { coreLibraryDesugaringEnabled true } } dependencies { coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5' } kotlin android { compileOptions { coreLibraryDesugaringEnabled = true } } dependencies { coreLibraryDesugaring ( \"com.android.tools:desugar_jdk_libs:1.1.5\" ) }","title":"LocalDateTime"},{"location":"LocalDateTime%207795ab14786e4b0db7cb658cdae2eb26/#localdatetime","text":"Create: 2021\ub144 10\uc6d4 1\uc77c \uc624\ud6c4 12:52 Tag: android","title":"LocalDateTime"},{"location":"LocalDateTime%207795ab14786e4b0db7cb658cdae2eb26/#_1","text":"https://developer.android.com/reference/java/time/package-summary \uc548\ub4dc\ub85c\uc774\ub4dc 26\uc5d0\uc11c \ubd80\ud130 \uc0c8\ub85c \ucd94\uac00\ub41c LocalDateTime\uc744 \uae30\uc900\uc73c\ub85c \uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0 \uc2dc\uac04 \ud45c\uc2dc \ubc29\ubc95\uc5d0 \ub300\ud558\uc5ec \uc774\uc57c\uae30 \ud574\ubcf4\ub824\uace0 \ud55c\ub2e4.","title":"\uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0\uc11c \uc2dc\uac04\ud45c\uc2dc \ubc29\ubc95"},{"location":"LocalDateTime%207795ab14786e4b0db7cb658cdae2eb26/#_2","text":"","title":"\uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0\uc11c \uc2dc\uac04"},{"location":"LocalDateTime%207795ab14786e4b0db7cb658cdae2eb26/#currenttimemillis","text":"UTC 1970-01-01 00:00:00\uc744 \uae30\uc900\uc73c\ub85c \uc2dc\uc791\ud558\ub294 \uc2dc\uac04 \ubcc0\uc218\uac00 Long \uac12\uc5d0 \uc800\uc7a5\ub418\uae30 \ub54c\ubb38\uc5d0 \ub300\ub7b5 100\ub144\uc815\ub3c4\uc758 \uc2dc\uac04\uc744 \uae30\ub85d\ud560 \uc218 \uc788\ub2e4. milliseconds \ub2e8\uc704 System . currentTimeMillis ()","title":"currentTimeMillis"},{"location":"LocalDateTime%207795ab14786e4b0db7cb658cdae2eb26/#elapsedrealtime","text":"\uc548\ub4dc\ub85c\uc774\ub4dc \uc2dc\uc791 \ud6c4 \uc9c0\uae08\uae4c\uc9c0\uc758 \ud758\ub7ec\uac04 \uc2dc\uac04 milliseconds \ub2e8\uc704 SystemClock . elapsedRealtime ()","title":"elapsedRealtime"},{"location":"LocalDateTime%207795ab14786e4b0db7cb658cdae2eb26/#localdatetime_1","text":"ISO-8601 calendar system \uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ub0a0\uc9dc \uc2dc\uac04 \ud45c\uc2dc\ubc29\ubc95\uc774\ub2e4. 2007-12-03T10:15:30 \uc640 \uac19\uc774 \ud45c\uc2dc\ud558\ub294 \uac83\uc774 \ub300\ud45c\uc801\uc778 \ud45c\uc2dc\ubc29\ubc95\uc774\uace0 \uc774\ud45c\uae30\ubc95\uc5d0\ub294 \ud0c0\uc784\uc874\uc774 \ub4e4\uc5b4\uac00 \uc788\uc9c0 \uc54a\ub2e4. \uc5ec\uae30\uc11c \uc2dc\uac04\ub300\ub97c \ucd94\uac00, \ud0c0\uc784\uc874 \ucd94\uac00 \uc5ec\ubd80\uc5d0 \ub530\ub77c \uc0ac\uc6a9\ub418\ub294 class\uac00 OffsetDatatime, ZonedDataTime \ub4f1\uc73c\ub85c \ub2ec\ub77c\uc9c0\uac8c \ub418\uba70 System.currentTimeMillis()\uacfc\uc758 \uc0c1\ud638 \ubcc0\ud658\uc744 \uc704\ud55c class \ubc0f \uc2dc\uac04\uac04\uaca9, \uc2dc\uac04\uc8fc\uae30 \ub97c \ud45c\uc2dc\ud558\uae30\uc704\ud55c class\ub4e4\uc774 \ucd94\uac00\ub85c \uc788\ub2e4.","title":"LocalDateTime"},{"location":"LocalDateTime%207795ab14786e4b0db7cb658cdae2eb26/#android-sdk-26","text":"\uc6b0\uc120 \uc2dc\uc791\ud558\uae30 \uc804\uc5d0 \uc548\ub4dc\ub85c\uc774\ub4dc 26\uc5d0\uc11c \ucd94\uac00\ub41c\uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \uc548\ub4dc\ub85c\uc774\ub4dc 26\ubbf8\ub9cc\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud558\uc5ec \uc54c\uc544 \ubcf4\uc790. \uc544\uc9c1\uae4c\uc9c0\ub294 \ud544\uc694\ud55c \uc0ac\ud56d\uc774\ub2e4.","title":"Android SDK 26 \uc774\ud558\uc5d0\uc11c \uc0ac\uc6a9"},{"location":"LocalDateTime%207795ab14786e4b0db7cb658cdae2eb26/#threethenabp","text":"\uc774\uc804\uc5d0 \uc0ac\uc6a9\ud55c JakeWharton\ub2d8\uc758 \ub77c\uc774\ube0c\ub7ec\ub9ac\uac00 \uc788\uc9c0\ub9cc \uc5ec\uae30\uc11c\ub294 \ub2e4\ub978 \ubc29\ubc95\uc744 \uc18c\uac1c\ud55c\ub2e4. GitHub - JakeWharton/ThreeTenABP: An adaptation of the JSR-310 backport for Android.","title":"ThreeThenABP"},{"location":"LocalDateTime%207795ab14786e4b0db7cb658cdae2eb26/#java-8-api","text":"\uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0\uc11c\ub294 Java 8+ API desugaring support (Android Gradle Plugin 4.0.0+)\ub97c \uc774\uc6a9\ud55c java.time.* \uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \ucf54\ub4dc\ub97c \uc0ac\uc6a9\ud560\uc218 \uc788\ub2e4. https://developer.android.com/studio/write/java8-support#library-desugaring \uc544\ub798\ucf54\ub4dc\ub97c \uc0bd\uc785\ud558\uba74 \uc0ac\uc6a9\ud560\uc218 \uc788\ub2e4. android { defaultConfig { multiDexEnabled true } compileOptions { coreLibraryDesugaringEnabled true sourceCompatibility JavaVersion . VERSION_1_8 targetCompatibility JavaVersion . VERSION_1_8 } kotlinOptions { jvmTarget = \"1.8\" } } dependencies { coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5' } Warning \uc0ac\uc6a9\ud574\ubcf8 \uacb0\uacfc\ub294 \ubaa8\ub4e0 \ud568\uc218\ub97c \uc9c0\uc6d0\ud558\uc9c0\ub294 \uc54a\ub294\ub2e4. https://developer.android.com/studio/write/java8-support-table","title":"Java 8+ API \uc774\uc6a9"},{"location":"LocalDateTime%207795ab14786e4b0db7cb658cdae2eb26/#tldr","text":"gradle android { compileOptions { coreLibraryDesugaringEnabled true } } dependencies { coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5' } kotlin android { compileOptions { coreLibraryDesugaringEnabled = true } } dependencies { coreLibraryDesugaring ( \"com.android.tools:desugar_jdk_libs:1.1.5\" ) }","title":"TL;DR"},{"location":"Room%20Test%201%20Dao%20Test%20046fa740a1f74274bda4ed5f8d6d4cf9/","text":"Room Test 1 Dao Test # Create: 2021\ub144 9\uc6d4 30\uc77c \uc624\ud6c4 4:25 Tag: android, db, test \uc774\uae00\uc740 Room Test 2 Migration Test \uacfc \uc5f0\uacb0\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. Room? # Room \uc740 Jetpack libraries\uc911\uc5d0\uc11c DB\uad00\ub828 \ub77c\uc774\ube0c\ub7ec\ub9ac \uc774\uba70, \uc8fc\uc694 \uae30\ub2a5\uc73c\ub85c DB\uc0ac\uc6a9\uc758 \uc7a5\uc810\uacfc, \uc26c\uc6b4 Data \uac1d\uccb4 \ubcc0\ud658\uc774 \ud2b9\uc9d5\uc778 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0\uc694. \uae00\uc744 \uc791\uc131\ud558\ub294 \uc2dc\uc810\uc744 \uae30\uc900\uc73c\ub85c Stable Release 2.3.0, Alpha 2.4.0-alpha05\uc774 \ub098\uc640\uc788\uc5b4\uc694. 2.4.0-alphaXX \ubd80\ud130 AutoMigration \uc744 \uc9c0\uc6d0\ud574\uc694. \uc790\uc138\ud55c\uac74 \uc544\ub798 \ub9c1\ud06c\ub97c \ucc38\uc870 AutoMigration \ucc38\uc870 \ub9c1\ud06c Gradle # dependencies { def room_version = \"2.4.0-alpha05\" implementation \"androidx.room:room-runtime:$room_version\" kapt \"androidx.room:room-compiler:$room_version\" implementation \"androidx.room:room-ktx:$room_version\" } Room Test # Room\uc744 test \ud558\uae30\uc704\ud55c \ubc29\ubc95\uc740 2\uac00\uc9c0\uac00 \uc788\uc5b4\uc694. \uccab\ubc88\uc9f8\ub294 android device\ub97c \uc0ac\uc6a9\ud558\ub294 test \ubc29\ubc95\uc774\uace0 InstrumentedTest \uc778\ub370 \ub2e4\ub978 \ud55c\uac00\uc9c0\ub294 Robolectric\uc744 \uc774\uc6a9\ud55c Unit Test \ubc29\ubc95\uc774\uc5d0\uc694. \uc774 \uc911 \uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0\uc11c \uad8c\uc7a5\ud558\ub294 \uc548.\ud558.\ub294 \ubc29\ubc95\uc740 UnitTest\uc5d0\uc694 \ud558\uc9c0\ub9cc InstrumentedTest \ubc29\ubc95\uc740 device\uac00 \ud544\uc694\ud574\uc694. \uc774\uac74 CI\ud234\uc5d0 \uc790\ub3d9\ud654\ub97c \ub3cc\ub9ac\uae30 \uc5b4\ub835\uc6b4 \ub2e8\uc810\uc774 \uc788\uc5b4\uc694. \uc774 \uae00\uc5d0\uc120 android device\uc5c6\uc774 \uc5b4\ub514\uae4c\uc9c0 room testing\uc774 \uac00\ub2a5\ud55c\uac00 \ud574\ubcfc\uaebc\uc5d0\uc694. Dao Test # room\uc5d0\uc11c test case\ub97c \ub9cc\ub4e4 \ub9cc\ud55c\uac83\uc774 \ubb34\uc5c7\uc774 \uc788\uc744\uae4c\uc694? \uae30\ubcf8\uc801\uc778 database \uc0dd\uc131 \ubc0f CRUD \ub4f1\uc774 \uc788\uaca0\ub124\uc694. Room\uc740 CRUD\uc758 \ub300\ubd80\ubd84\uc744 Dao class\uc5d0\uc11c \ud560\uc218 \uc788\uc5b4\uc694. \uc0d8\ud50c\uc5d0\uc11c \uc694\uae30 \ubd80\ubd84 \uc774\uc5d0\uc694. \uc5ec\uae30\ub97c test\ud558\ub294 \ucf54\ub4dc\ub97c \ub9cc\ub4e4\uba74 Room test \uc5d0\uc11c \uc808\ubc18\uc740 \ud588\ub2e4\uace0 \uc0dd\uac01\ud558\uc2dc\uba74 \ub418\uc694. Migration Test # room database\uc5d0\uc11c\ub294 \ubc84\uc804\uc774 \uc788\uace0 \uc774 \ubc84\uc804\uc740 \ud504\ub85c\uadf8\ub7a8\uc758 \ubcc0\uacbd\uc5d0 \ub530\ub77c \uc774\uc804 \uc0ac\uc6a9\uc790\ub4e4\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc \ud558\uba74\uc11c \ubcc0\uacbd\ud574\uc694. \uc774\uac78 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc774\ub77c \ud574\uc694 room Migration Test\ub294 \ub2e4\ub978 test\uc640 \uc880\ub2e4\ub974\uac8c \ubd88\ud3b8\ud55c \ubd80\ubd84\uc774 \uc788\uace0 \uc8fc\uc758\ud574\uc57c \ud560\uc810\ub3c4 \uc788\uc5b4\uc694. \ub2e4\uc74c \uae00\uc5d0\uc11c \uc880\ub354 \uc0c1\uc138\ud558\uac8c Migration Test\ub97c \ub2e4\ub8f0\uaebc\uc5d0\uc694. Android Instrumented Test # \uc544\ub798\uc640 \uac19\uc740 \ucf54\ub4dc\ub97c test \ud560\uaebc\uc5d0\uc694 @Dao interface UserDao { @Insert ( onConflict = OnConflictStrategy . REPLACE ) suspend fun insertUser ( entity : UserEntity ): Long @Delete suspend fun deleteUser ( entity : UserEntity ): Int @Update suspend fun updateUser ( entity : UserEntity ): Int @Query ( \"SELECT * FROM USERS WHERE id = :id\" ) suspend fun getUser ( id : Long ): UserEntity? @Query ( \"SELECT * FROM USERS\" ) fun getAllUsers (): Flow < List < UserEntity >> } Dao\uc5d0\uc120 UI Thread\uc5d0\uc11c \uc811\uadfc\uc774 \ubd88\uac00\ub2a5\ud558\uae30 \ub54c\ubb38\uc5d0 \uc5ec\uae30\uc11c\ub294 Coroutine\ub97c \uc0ac\uc6a9\ud588\uc5b4\uc694. \ub530\ub77c\uc11c \ub2e4\uc74c\uacfc \uac19\uc740 Instrumented Test Code\ub97c \ub9cc\ub4e4\uc218 \uc788\uc5b4\uc694. @RunWith ( AndroidJUnit4 :: class ) class TestDatabaseTest { private lateinit var userDao : UserDao private lateinit var db : TestDatabase @Before fun createDb () { val context = ApplicationProvider . getApplicationContext < Context > () db = Room . inMemoryDatabaseBuilder ( context , TestDatabase :: class . java ). build () userDao = db . getUserDao () } @After @Throws ( IOException :: class ) fun closeDb () { db . close () } @Test @Throws ( Exception :: class ) fun writeUserAndReadInList () = runBlocking { //givens val user = UserEntity ( 0 , \"hello\" , Level . Level1 , LocalDateTime . now ()) //when val id = userDao . insertUser ( user ) val actual = userDao . getUser ( id ) //then assertThat ( actual ). let { it . isNotNull () it . isEqualTo ( user . copy ( id = id )) } } } Tip inMemoryDatabase\ub97c \uc774\uc6a9\ud574\uc11c test\ub97c \ud558\uace0 test block\uc744 coroutine runBlocking \uc73c\ub85c \uac10\uc2f8\uc11c test \ud569\ub2c8\ub2e4. Etc import com.google.common.truth.Truth.assertThat Unit Test # Unit Test\uc5d0\uc11c test\ub97c \ud560\ub824\uba74 \ud06c\uac8c \ub2e4\ub974\uc9c0 \uc54a\uc544\uc694 \ub2e4\ub9cc. Robolectric\uc744 \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. Robolectric # gradle //robolectric dependencies { testImplementation ' org . robolectric : robolectric : 4.5 . 1 ' testImplementation ' androidx . test . ext : junit - ktx : 1.1 . 3 ' } android { testOptions { unitTests { includeAndroidResources = true } } } unit test code @Config ( sdk = [ 30 ] ) @RunWith ( RobolectricTestRunner :: class ) class TestDatabaseUnitTest { ... } \uc81c\uac00 \uc54c\uace0 \uc788\ub294 \uac00\uc7a5 \uac04\ub2e8\ud55c Robolectric\uc0ac\uc6a9\ubc95\uc774\uc5d0\uc694 unit test code # @Config ( sdk = [ 30 ] ) @RunWith ( RobolectricTestRunner :: class ) class TestDatabaseUnitTest { private lateinit var userDao : UserDao private lateinit var db : TestDatabase @Before fun createDb () { val context = ApplicationProvider . getApplicationContext < Context > () db = Room . inMemoryDatabaseBuilder ( context , TestDatabase :: class . java ). build () userDao = db . getUserDao () } @After @Throws ( IOException :: class ) fun closeDb () { db . close () } @Test @Throws ( Exception :: class ) fun writeUserAndReadInList () = runBlocking { //givens val user = UserEntity ( 0 , \"hello\" , Level . Level1 , LocalDateTime . now (). withNano ( 0 )) //when val id = userDao . insertUser ( user ) val actual = userDao . getUser ( id ) //then Truth . assertThat ( actual ). let { it . isNotNull () it . isEqualTo ( user . copy ( id = id )) } } } TL;DR # Sample Code GitHub - eastar-dev/RoomTest: room migrations","title":"Room Test 1 Dao Test"},{"location":"Room%20Test%201%20Dao%20Test%20046fa740a1f74274bda4ed5f8d6d4cf9/#room-test-1-dao-test","text":"Create: 2021\ub144 9\uc6d4 30\uc77c \uc624\ud6c4 4:25 Tag: android, db, test \uc774\uae00\uc740 Room Test 2 Migration Test \uacfc \uc5f0\uacb0\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.","title":"Room Test 1 Dao Test"},{"location":"Room%20Test%201%20Dao%20Test%20046fa740a1f74274bda4ed5f8d6d4cf9/#room","text":"Room \uc740 Jetpack libraries\uc911\uc5d0\uc11c DB\uad00\ub828 \ub77c\uc774\ube0c\ub7ec\ub9ac \uc774\uba70, \uc8fc\uc694 \uae30\ub2a5\uc73c\ub85c DB\uc0ac\uc6a9\uc758 \uc7a5\uc810\uacfc, \uc26c\uc6b4 Data \uac1d\uccb4 \ubcc0\ud658\uc774 \ud2b9\uc9d5\uc778 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0\uc694. \uae00\uc744 \uc791\uc131\ud558\ub294 \uc2dc\uc810\uc744 \uae30\uc900\uc73c\ub85c Stable Release 2.3.0, Alpha 2.4.0-alpha05\uc774 \ub098\uc640\uc788\uc5b4\uc694. 2.4.0-alphaXX \ubd80\ud130 AutoMigration \uc744 \uc9c0\uc6d0\ud574\uc694. \uc790\uc138\ud55c\uac74 \uc544\ub798 \ub9c1\ud06c\ub97c \ucc38\uc870 AutoMigration \ucc38\uc870 \ub9c1\ud06c","title":"Room?"},{"location":"Room%20Test%201%20Dao%20Test%20046fa740a1f74274bda4ed5f8d6d4cf9/#gradle","text":"dependencies { def room_version = \"2.4.0-alpha05\" implementation \"androidx.room:room-runtime:$room_version\" kapt \"androidx.room:room-compiler:$room_version\" implementation \"androidx.room:room-ktx:$room_version\" }","title":"Gradle"},{"location":"Room%20Test%201%20Dao%20Test%20046fa740a1f74274bda4ed5f8d6d4cf9/#room-test","text":"Room\uc744 test \ud558\uae30\uc704\ud55c \ubc29\ubc95\uc740 2\uac00\uc9c0\uac00 \uc788\uc5b4\uc694. \uccab\ubc88\uc9f8\ub294 android device\ub97c \uc0ac\uc6a9\ud558\ub294 test \ubc29\ubc95\uc774\uace0 InstrumentedTest \uc778\ub370 \ub2e4\ub978 \ud55c\uac00\uc9c0\ub294 Robolectric\uc744 \uc774\uc6a9\ud55c Unit Test \ubc29\ubc95\uc774\uc5d0\uc694. \uc774 \uc911 \uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0\uc11c \uad8c\uc7a5\ud558\ub294 \uc548.\ud558.\ub294 \ubc29\ubc95\uc740 UnitTest\uc5d0\uc694 \ud558\uc9c0\ub9cc InstrumentedTest \ubc29\ubc95\uc740 device\uac00 \ud544\uc694\ud574\uc694. \uc774\uac74 CI\ud234\uc5d0 \uc790\ub3d9\ud654\ub97c \ub3cc\ub9ac\uae30 \uc5b4\ub835\uc6b4 \ub2e8\uc810\uc774 \uc788\uc5b4\uc694. \uc774 \uae00\uc5d0\uc120 android device\uc5c6\uc774 \uc5b4\ub514\uae4c\uc9c0 room testing\uc774 \uac00\ub2a5\ud55c\uac00 \ud574\ubcfc\uaebc\uc5d0\uc694.","title":"Room Test"},{"location":"Room%20Test%201%20Dao%20Test%20046fa740a1f74274bda4ed5f8d6d4cf9/#dao-test","text":"room\uc5d0\uc11c test case\ub97c \ub9cc\ub4e4 \ub9cc\ud55c\uac83\uc774 \ubb34\uc5c7\uc774 \uc788\uc744\uae4c\uc694? \uae30\ubcf8\uc801\uc778 database \uc0dd\uc131 \ubc0f CRUD \ub4f1\uc774 \uc788\uaca0\ub124\uc694. Room\uc740 CRUD\uc758 \ub300\ubd80\ubd84\uc744 Dao class\uc5d0\uc11c \ud560\uc218 \uc788\uc5b4\uc694. \uc0d8\ud50c\uc5d0\uc11c \uc694\uae30 \ubd80\ubd84 \uc774\uc5d0\uc694. \uc5ec\uae30\ub97c test\ud558\ub294 \ucf54\ub4dc\ub97c \ub9cc\ub4e4\uba74 Room test \uc5d0\uc11c \uc808\ubc18\uc740 \ud588\ub2e4\uace0 \uc0dd\uac01\ud558\uc2dc\uba74 \ub418\uc694.","title":"Dao Test"},{"location":"Room%20Test%201%20Dao%20Test%20046fa740a1f74274bda4ed5f8d6d4cf9/#migration-test","text":"room database\uc5d0\uc11c\ub294 \ubc84\uc804\uc774 \uc788\uace0 \uc774 \ubc84\uc804\uc740 \ud504\ub85c\uadf8\ub7a8\uc758 \ubcc0\uacbd\uc5d0 \ub530\ub77c \uc774\uc804 \uc0ac\uc6a9\uc790\ub4e4\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc \ud558\uba74\uc11c \ubcc0\uacbd\ud574\uc694. \uc774\uac78 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc774\ub77c \ud574\uc694 room Migration Test\ub294 \ub2e4\ub978 test\uc640 \uc880\ub2e4\ub974\uac8c \ubd88\ud3b8\ud55c \ubd80\ubd84\uc774 \uc788\uace0 \uc8fc\uc758\ud574\uc57c \ud560\uc810\ub3c4 \uc788\uc5b4\uc694. \ub2e4\uc74c \uae00\uc5d0\uc11c \uc880\ub354 \uc0c1\uc138\ud558\uac8c Migration Test\ub97c \ub2e4\ub8f0\uaebc\uc5d0\uc694.","title":"Migration Test"},{"location":"Room%20Test%201%20Dao%20Test%20046fa740a1f74274bda4ed5f8d6d4cf9/#android-instrumented-test","text":"\uc544\ub798\uc640 \uac19\uc740 \ucf54\ub4dc\ub97c test \ud560\uaebc\uc5d0\uc694 @Dao interface UserDao { @Insert ( onConflict = OnConflictStrategy . REPLACE ) suspend fun insertUser ( entity : UserEntity ): Long @Delete suspend fun deleteUser ( entity : UserEntity ): Int @Update suspend fun updateUser ( entity : UserEntity ): Int @Query ( \"SELECT * FROM USERS WHERE id = :id\" ) suspend fun getUser ( id : Long ): UserEntity? @Query ( \"SELECT * FROM USERS\" ) fun getAllUsers (): Flow < List < UserEntity >> } Dao\uc5d0\uc120 UI Thread\uc5d0\uc11c \uc811\uadfc\uc774 \ubd88\uac00\ub2a5\ud558\uae30 \ub54c\ubb38\uc5d0 \uc5ec\uae30\uc11c\ub294 Coroutine\ub97c \uc0ac\uc6a9\ud588\uc5b4\uc694. \ub530\ub77c\uc11c \ub2e4\uc74c\uacfc \uac19\uc740 Instrumented Test Code\ub97c \ub9cc\ub4e4\uc218 \uc788\uc5b4\uc694. @RunWith ( AndroidJUnit4 :: class ) class TestDatabaseTest { private lateinit var userDao : UserDao private lateinit var db : TestDatabase @Before fun createDb () { val context = ApplicationProvider . getApplicationContext < Context > () db = Room . inMemoryDatabaseBuilder ( context , TestDatabase :: class . java ). build () userDao = db . getUserDao () } @After @Throws ( IOException :: class ) fun closeDb () { db . close () } @Test @Throws ( Exception :: class ) fun writeUserAndReadInList () = runBlocking { //givens val user = UserEntity ( 0 , \"hello\" , Level . Level1 , LocalDateTime . now ()) //when val id = userDao . insertUser ( user ) val actual = userDao . getUser ( id ) //then assertThat ( actual ). let { it . isNotNull () it . isEqualTo ( user . copy ( id = id )) } } } Tip inMemoryDatabase\ub97c \uc774\uc6a9\ud574\uc11c test\ub97c \ud558\uace0 test block\uc744 coroutine runBlocking \uc73c\ub85c \uac10\uc2f8\uc11c test \ud569\ub2c8\ub2e4. Etc import com.google.common.truth.Truth.assertThat","title":"Android Instrumented Test"},{"location":"Room%20Test%201%20Dao%20Test%20046fa740a1f74274bda4ed5f8d6d4cf9/#unit-test","text":"Unit Test\uc5d0\uc11c test\ub97c \ud560\ub824\uba74 \ud06c\uac8c \ub2e4\ub974\uc9c0 \uc54a\uc544\uc694 \ub2e4\ub9cc. Robolectric\uc744 \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"Unit Test"},{"location":"Room%20Test%201%20Dao%20Test%20046fa740a1f74274bda4ed5f8d6d4cf9/#robolectric","text":"gradle //robolectric dependencies { testImplementation ' org . robolectric : robolectric : 4.5 . 1 ' testImplementation ' androidx . test . ext : junit - ktx : 1.1 . 3 ' } android { testOptions { unitTests { includeAndroidResources = true } } } unit test code @Config ( sdk = [ 30 ] ) @RunWith ( RobolectricTestRunner :: class ) class TestDatabaseUnitTest { ... } \uc81c\uac00 \uc54c\uace0 \uc788\ub294 \uac00\uc7a5 \uac04\ub2e8\ud55c Robolectric\uc0ac\uc6a9\ubc95\uc774\uc5d0\uc694","title":"Robolectric"},{"location":"Room%20Test%201%20Dao%20Test%20046fa740a1f74274bda4ed5f8d6d4cf9/#unit-test-code","text":"@Config ( sdk = [ 30 ] ) @RunWith ( RobolectricTestRunner :: class ) class TestDatabaseUnitTest { private lateinit var userDao : UserDao private lateinit var db : TestDatabase @Before fun createDb () { val context = ApplicationProvider . getApplicationContext < Context > () db = Room . inMemoryDatabaseBuilder ( context , TestDatabase :: class . java ). build () userDao = db . getUserDao () } @After @Throws ( IOException :: class ) fun closeDb () { db . close () } @Test @Throws ( Exception :: class ) fun writeUserAndReadInList () = runBlocking { //givens val user = UserEntity ( 0 , \"hello\" , Level . Level1 , LocalDateTime . now (). withNano ( 0 )) //when val id = userDao . insertUser ( user ) val actual = userDao . getUser ( id ) //then Truth . assertThat ( actual ). let { it . isNotNull () it . isEqualTo ( user . copy ( id = id )) } } }","title":"unit test code"},{"location":"Room%20Test%201%20Dao%20Test%20046fa740a1f74274bda4ed5f8d6d4cf9/#tldr","text":"Sample Code GitHub - eastar-dev/RoomTest: room migrations","title":"TL;DR"},{"location":"Room%20Test%202%20Migration%20Test%205e70dc89031448e1b5de529c223f4c61/","text":"Room Test 2 Migration Test # Create: 2021\ub144 10\uc6d4 5\uc77c \uc624\ud6c4 5:08 Tag: android, db, test \uc774\uae00\uc740 Room Test 1 Dao Test \uacfc \uc5f0\uacb0\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. Migration Test # room database\uc5d0\uc11c\ub294 \ubc84\uc804\uc774 \uc788\uace0 \uc774 \ubc84\uc804\uc740 \ud504\ub85c\uadf8\ub7a8\uc758 \ubcc0\uacbd\uc5d0 \ub530\ub77c \uc774\uc804 \uc0ac\uc6a9\uc790\ub4e4\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc \ud558\uba74\uc11c \ubcc0\uacbd\ud574\uc694. \uc774\uac78 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc774\ub77c \ud574\uc694 room Migration Test\ub294 \ub2e4\ub978 test\uc640 \uc880\ub2e4\ub974\uac8c \ubd88\ud3b8\ud55c \ubd80\ubd84\uc774 \uc788\uace0 \uc8fc\uc758\ud574\uc57c \ud560\uc810\ub3c4 \uc788\uc5b4\uc694. \uc774 \uae00\uc5d0\uc11c \ud575\uc2ec\uc740 Migration Test\uace0 \uc774 \ubd80\ubd84\uc5d0 \ub300\ud574\uc11c \uc880 \ub354\uc2ec\ub3c4 \uc788\uac8c \ub2e4\ub8f0 \uc0dd\uac01\uc774\uc5d0\uc694. Gradle # dependencies { def room_version = \"2.4.0-alpha05\" implementation \"androidx.room:room-runtime:$room_version\" kapt \"androidx.room:room-compiler:$room_version\" implementation \"androidx.room:room-ktx:$room_version\" testImplementation \"androidx.room:room-testing:$room_version\" androidTestImplementation \"androidx.room:room-testing:$room_version\" } android { defaultConfig { javaCompileOptions { annotationProcessorOptions { arguments += [ \"room.schemaLocation\" : \" $ projectDir /schemas\" . toString (), \"room.incremental\" : \"true\" , \"room.expandProjection\" : \"true\" ] } } } } Android Instrumented Test # comumn add test # \uc544\ub798\uc640 \uac19\uc740 \ucf54\ub4dc\ub97c test \ud560\uaebc\uc5d0\uc694. \uae30\uc874\uc758 DB version 1 \u2192 2\ubcc0\uacbd\ub418\uba74\uc11c location\uacfc photo\uac00 \ucd94\uac00\ub410\uc5b4\uc694. val MIGRATION_1_2 = object : Migration ( 1 , 2 ) { override fun migrate ( database : SupportSQLiteDatabase ) { database . execSQL ( \"ALTER TABLE USERS ADD COLUMN location TEXT\" ) database . execSQL ( \"ALTER TABLE USERS ADD COLUMN photo TEXT\" ) } } Dao\uc5d0\uc120 UI Thread\uc5d0\uc11c \uc811\uadfc\uc774 \ubd88\uac00\ub2a5\ud558\uae30 \ub54c\ubb38\uc5d0 \uc5ec\uae30\uc11c\ub294 Coroutine\ub97c \uc0ac\uc6a9\ud588\uc5b4\uc694. \ub530\ub77c\uc11c \ub2e4\uc74c\uacfc \uac19\uc740 Instrumented Test Code\ub97c \ub9cc\ub4e4\uc218 \uc788\uc5b4\uc694. class MigrationTest { companion object { const val TEST_DB = \"migration-test\" } @get : Rule val helper : MigrationTestHelper = MigrationTestHelper ( InstrumentationRegistry . getInstrumentation (), TestDatabase :: class . java , ) @Test fun migration_1_2 () { //given helper . createDatabase ( TEST_DB , 1 ). use { it . execSQL ( \"INSERT INTO USERS ( name,level,date ) VALUES ('eastar', 'Level1' ,0);\" ) } //when helper . runMigrationsAndValidate ( TEST_DB , 2 , true , MIGRATION_1_2 ). use { //then val cursor = it . query ( \"SELECT COUNT(*) FROM USERS\" ) cursor . moveToFirst () val actual = cursor . getLong ( 0 ) cursor . close () assertThat ( actual ). isEqualTo ( 1 ) } } } Warning migration test \ub294 \uae30\ubcf8\uc801\uc73c\ub85c DB\uc758 \uad6c\uc870\ub9cc test \ud574\uc694. DB\uc758 \ub0b4\uc6a9\uc774 \uc7ac\ub300\ub85c \ubcc0\uacbd \ub410\ub294\uc9c0\ub294 \uc9c1\uc811 assert\ub97c \uc0ac\uc6a9\ud574\uc11c \ud655\uc778 \ud574\uc57c\ud574\uc694 comumn change test # \uc774\ubc88\uc5d0\ub294 \ub09c\uc774\ub3c4\uac00 \uc788\ub294 \ubcc0\uacbd \uc791\uc5c5\uc744 \ud560\ub824\uace0\ud574\uc694 \ucf54\ub4dc\ub294 \uae38\uc9c0\ub9cc \ub0b4\uc6a9\uc740 \uac04\ub2e8\ud574\uc694. date\uc758 \uac12\uc774 long\ub97c \uc0ac\uc6a9\ud574\uc11c \uc800\uc7a5 \ud588\ub294\ub370 String\ub97c \uc0ac\uc6a9\ud574\uc11c \ubcc0\uacbd \ud558\ub294 \ub0b4\uc6a9\uc785\ub2c8\ub2e4. val MIGRATION_2_3 = object : Migration ( 2 , 3 ) { override fun migrate ( database : SupportSQLiteDatabase ) { /** copy form data/schemas/dev.eastar.roomtest.data.db.TestDatabase/3.json */ val tempTable = \"\"\"CREATE TABLE IF NOT EXISTS `USERS_3` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `level` TEXT NOT NULL, `date` TEXT NOT NULL, `location` TEXT, `photo` TEXT)\"\"\" database . execSQL ( tempTable ) val cursor = database . query ( \"\"\"SELECT id, name, level, date, location, photo FROM USERS\"\"\" ) while ( cursor . moveToNext ()) { val id = cursor . getLong ( 0 ) val name = cursor . getString ( 1 ) val level = cursor . getString ( 2 ) val date = cursor . getLong ( 3 ) val location = cursor . getStringOrNull ( 4 ) val photo = cursor . getStringOrNull ( 5 ) database . execSQL ( \"\"\"INSERT INTO USERS_3 (id, name, level, date, location, photo ) VALUES ( $ id , ' $ name ', ' $ level ', ' ${ Instant . ofEpochMilli ( date ). atOffset ( ZoneOffset . UTC ). toLocalDateTime () } ', ${ location ?. let { \"' $ location '\" } ?: \" NULL \" } , ${ photo ?. let { \"' $ photo '\" } ?: \" NULL \" } );\"\"\" ) } database . execSQL ( \"DROP TABLE USERS\" ) database . execSQL ( \"ALTER TABLE USERS_3 RENAME TO USERS\" ) } } migration\uc740 table \uad6c\uc870\ub9cc \uac80\uc99d\ud574\uc8fc\uae30 \ub54c\ubb38\uc5d0 \ub0b4\uc6a9\uc740 \uc9c1\uc811 \uac80\uc99d\ud574\uc57c \ud574\uc694. \uadf8\ub9ac\uace0 \uc0dd\uac01\ubcf4\ub2e4 Table column type\ub3c4 \uc77c\uc77c\uc774 \ucc59\uaca8\uc57c \ud574\uc694 Note migrateion \uc5d0\uc11c \uc0ad\uc81c\uc640 \ubcc0\uacbd\uc744 \uc9c0\uc6d0 \ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 dummyTable \u2192 \ubcf5\uc0ac \u2192 \uc6d0\ubcf8\uc0ad\uc81c \u2192 dummyTable\uc774\ub984 \ubcc0\uacbd \uc774\ub77c\ub294 \uc5c4\uccad\ub09c \uacfc\uc815\uc744 \uac70\uccd0\uc57c \ud569\ub2c8\ub2e4. CREATE TABLE QUERY\ub294 \uc5b4\ub514\uc5d0\uc11c \uac00\uc838\uc62c\uae4c? val tempTable = \"\"\"CREATE TABLE IF NOT EXISTS `USERS_3` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `level` TEXT NOT NULL, `date` TEXT NOT NULL, `location` TEXT, `photo` TEXT)\"\"\" \uc544\ub798\ucabd\uc774 \uc81c\uac00 \uc0ac\uc6a9\ud558\ub294 table entity\uc778\ub370 \uc0dd\uac01\ud558\ub294\uac83\uacfc \uc0dd\uc131\ub41c table\uc774 \ub2e4\ub97c \uc218 \uc788\uc73c\ub2c8 \ubcf5\uc0ac\ud574\uc11c \uc0ac\uc6a9\ud558\uae30\ub97c \uad8c\uc7a5\ub4dc\ub824\uc694. @Entity ( tableName = \"USERS\" ) data class UserEntity ( @PrimaryKey ( autoGenerate = true ) val id : Long = 0 , val name : String = \"\" , val level : Level , val date : LocalDateTime = LocalDateTime . now (). withNano ( 0 ), val location : String? = \"geo: ${ Random . latitude } , ${ Random . longitude } \" , val photo : String? = \"https://picsum.photos/id/ ${ Random . nextInt ( 100 ) } /100/100\" , ) test code class MigrationTest { companion object { const val TEST_DB = \"migration-test\" } @get : Rule val helper : MigrationTestHelper = MigrationTestHelper ( InstrumentationRegistry . getInstrumentation (), TestDatabase :: class . java , ) @Test fun migration_2_3 () { //given helper . createDatabase ( TEST_DB , 2 ). use { /** 0 => UTC 1970-01-01 00:00:00.000 */ it . execSQL ( \"INSERT INTO USERS ( name,level,date,location,photo ) VALUES ('eastar', 'Level1' ,0,NULL,NULL);\" ) } //when helper . runMigrationsAndValidate ( TEST_DB , 3 , true , MIGRATION_2_3 ). use { //then val cursor = it . query ( \"SELECT id,name,level,date,location,photo FROM USERS\" ) cursor . moveToFirst () val id = cursor . getLong ( 0 ) //id val date = cursor . getString ( 3 ) //date val location = cursor . getStringOrNull ( 4 ) //location cursor . close () assertThat ( id ). isEqualTo ( 1 ) assertThat ( DateConverter . text2LocalDateTime ( date )) . isEqualTo ( DateConverter . text2LocalDateTime ( \"1970-01-01T00:00:00.000\" )) assertThat ( location ). isNull () } } } All Migration Test # \uc774\ubc88 test \ud560\ub0b4\uc6a9\uc740 1\u21923\uae4c\uc9c0 \ubaa8\ub4e0 migration\uc744 Test \ud558\ub294 \ubc29\ubc95\uc744 \ud655\uc778 \ud574\ubcfc\uaed8\uc694. test code class MigrationTest { companion object { const val TEST_DB = \"migration-test\" } @get : Rule val helper : MigrationTestHelper = MigrationTestHelper ( InstrumentationRegistry . getInstrumentation (), TestDatabase :: class . java , ) @Test @Throws ( IOException :: class ) fun migrateAll () { helper . createDatabase ( TEST_DB , 1 ). use { } Room . databaseBuilder ( InstrumentationRegistry . getInstrumentation (). targetContext , TestDatabase :: class . java , TEST_DB ). addMigrations ( MIGRATION_1_2 , MIGRATION_2_3 ). build (). apply { openHelper . writableDatabase close () } } } Warning migration test \ub294 \uae30\ubcf8\uc801\uc73c\ub85c DB\uc758 \uad6c\uc870\ub9cc test \ud574\uc694. DB\uc758 \ub0b4\uc6a9\uc774 \uc7ac\ub300\ub85c \ubcc0\uacbd \ub410\ub294\uc9c0\ub294 \uc9c1\uc811 assert\ub97c \uc0ac\uc6a9\ud574\uc11c \ud655\uc778 \ud574\uc57c\ud574\uc694 Unit Test # Unit Test\uc5d0\uc11c test\ub97c \ud560\ub824\uba74 \ud06c\uac8c \ub2e4\ub974\uc9c0 \uc54a\uc544\uc694 \ub2e4\ub9cc. Robolectric\uc744 \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \ub364\uc73c\ub85c \uc2e4\ud589\uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\ub294\uac83\ub3c4 \ud3ec\ud568\uc774\uc5d0\uc694. Robolectric # gradle //robolectric dependencies { testImplementation ' org . robolectric : robolectric : 4.5 . 1 ' testImplementation ' androidx . test . ext : junit - ktx : 1.1 . 3 ' } android { testOptions { unitTests { includeAndroidResources = true } } } unit test code @Config ( sdk = [ 30 ] ) @RunWith ( RobolectricTestRunner :: class ) class TestDatabaseUnitTest { ... \uc81c\uac00 \uc54c\uace0 \uc788\ub294 \uac00\uc7a5 \uac04\ub2e8\ud55c Robolectric\uc0ac\uc6a9\ubc95\uc774\uc5d0\uc694 unit test code # android test \ub791 \ub3d9\uc77c\ud569\ub2c8\ub2e4. @Config ( sdk = [ 30 ] ) @RunWith ( RobolectricTestRunner :: class ) class MigrationUnitTest { companion object { const val TEST_DB = \"migration-test\" } @get : Rule val helper : MigrationTestHelper = MigrationTestHelper ( InstrumentationRegistry . getInstrumentation (), TestDatabase :: class . java , ) @Test @Throws ( IOException :: class ) fun migrateAll () { helper . createDatabase ( TEST_DB , 1 ). use { } Room . databaseBuilder ( InstrumentationRegistry . getInstrumentation (). targetContext , TestDatabase :: class . java , TEST_DB ). addMigrations ( MIGRATION_1_2 , MIGRATION_2_3 ). build (). apply { openHelper . writableDatabase close () } } @Test fun migration_1_2 () { //given helper . createDatabase ( TEST_DB , 1 ). use { it . execSQL ( \"INSERT INTO USERS ( name,level,date ) VALUES ('eastar', 'Level1' ,0);\" ) } //when helper . runMigrationsAndValidate ( TEST_DB , 2 , true , MIGRATION_1_2 ). use { //then val cursor = it . query ( \"SELECT COUNT(*) FROM USERS\" ) cursor . moveToFirst () val actual = cursor . getLong ( 0 ) cursor . close () assertThat ( actual ). isEqualTo ( 1 ) } } @Test fun migration_2_3 () { //given helper . createDatabase ( TEST_DB , 2 ). use { /** 0 => UTC 1970-01-01 00:00:00.000 */ it . execSQL ( \"INSERT INTO USERS ( name,level,date,location,photo ) VALUES ('eastar', 'Level1' ,0,NULL,NULL);\" ) } //when helper . runMigrationsAndValidate ( TEST_DB , 3 , true , MIGRATION_2_3 ). use { //then val cursor = it . query ( \"SELECT id,name,level,date,location,photo FROM USERS\" ) cursor . moveToFirst () val id = cursor . getLong ( 0 ) //id val date = cursor . getString ( 3 ) //date val location = cursor . getStringOrNull ( 4 ) //location cursor . close () assertThat ( id ). isEqualTo ( 1 ) assertThat ( DateConverter . text2LocalDateTime ( date )) . isEqualTo ( DateConverter . text2LocalDateTime ( \"1970-01-01T00:00:00.000\" )) assertThat ( location ). isNull () } } } \ub2e4\ub9cc \uc544\ub798\uc640 \uac19\uc740 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. Cannot find the schema file in the assets folder. Make sure to include the exported json schemas in your test assert inputs. See https://developer.android.com/training/data-storage/room/migrating-db-versions#export-schema for details. Missing file: dev.eastar.roomtest.data.db.TestDatabase/1.json java.io.FileNotFoundException: Cannot find the schema file in the assets folder. Make sure to include the exported json schemas in your test assert inputs. See https://developer.android.com/training/data-storage/room/migrating-db-versions#export-schema for details. Missing file: dev.eastar.roomtest.data.db.TestDatabase/1.json at androidx.room.testing.MigrationTestHelper.loadSchema(MigrationTestHelper.java:484) at androidx.room.testing.MigrationTestHelper.createDatabase(MigrationTestHelper.java:238) at dev.eastar.roomtest.data.db.MigrationUnitTest.migrateAll(MigrationUnitTest.kt:33) at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.base/java.lang.reflect.Method.invoke(Method.java:566) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:61) at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) at org.robolectric.RobolectricTestRunner$HelperTestRunner$1.evaluate(RobolectricTestRunner.java:575) at org.robolectric.internal.SandboxTestRunner$2.lambda$evaluate$0(SandboxTestRunner.java:278) at org.robolectric.internal.bytecode.Sandbox.lambda$runOnMainThread$0(Sandbox.java:89) at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) at java.base/java.lang.Thread.run(Thread.java:834) \uc694\uc57d\ud558\uba74 exported json schemas\uac00 \uc548\ub41c\uac83 \uac19\uc73c\ub2c8 \ub2e4\uc74c \uc8fc\uc18c\uc5d0 \uac00\uc11c \uc790\uc138\ud55c\uac74 \ud655\uc778\ud574\ubd10\ub77c. \ubabb\ucc3e\uc740 \ud30c\uc77c\uc740 ~~ .json\ud30c\uc77c\uc774\ub2e4. \ub780 \ub0b4\uc6a9\uc785\ub2c8\ub2e4. \ud574\ub2f9 \uc8fc\uc18c\uc5d0 \uac00\uc11c\ubcf4\uba74 \uc774\ubbf8 \uc124\uc815\ud55c gradle setting\uc5d0 \ub300\ud55c \uc774\uc57c\uae30\ub97c \ud558\uace0 \uc788\ub124\uc694. Cannot find the schema file in the assets folder. Make sure to include the exported json schemas in your test assert inputs. See https://developer.android.com/training/data-storage/room/migrating-db-versions#export-schema for details. Missing file: dev.eastar.roomtest.data.db.TestDatabase/1.json \uc544\ub798 \ud30c\uc77c\uc744 \uc18c\uc2a4\uc5d0 \ub123\uc5b4 \ubc14\uafd4\uce58\uae30 \uaf3c\uc218\ub97c \uc368\uc57c \ud569\ub2c8\ub2e4. \ucca8\ubd80\ud30c\uc77c MigrationTestHelper.java \ud30c\uc77c\uc5d0 \ucd9c\ucc98\ub294 \uc544\ub798 \ucf54\ub4dc\ub97c \ucd94\uc801\ud574\uc11c \ub514\ucef4\ud30c\uc77c\ud55c \ucf54\ub4dc\uc5d0\uc694. \uad8c\uc7a5\uc740 https://cs.android.com/ \uc5d0\uc11c \ucf54\ub4dc\ub97c \ucc3e\uc73c\uc154\uc11c \ub123\ub294\uac8c \uc88b\uc2b5\ub2c8\ub2e4. import androidx.room.testing.MigrationTestHelper \uc774 \ud30c\uc77c\uc744 \uadf8\ub0e5 \ub123\uc73c\uc2dc\uba74 \uc548\ub418\uace0 unit test\uc5d0\uc11c getAssets()\uc744 \ud1b5\ud574 1.json \ud30c\uc77c\uc744 \uc77d\uc744 \uc218 \uc5c6\uc5b4\uc11c \ub098\uc624\ub294 \uc624\ub958\uc774\uae30 \ub54c\ubb38\uc5d0 \ud574\ub2f9 \ubd80\ubd84\uc744 \uc218\uc815\ud574\uc11c \ub123\uc2b5\ub2c8\ub2e4. \uc544\ub798\ub294 \ubcc0\uacbd\ud55c \ubd80\ubd84\uc740 \uc774\uc5d0\uc694. private SchemaBundle loadSchema ( Context context , int version ) throws IOException { // InputStream input = context.getAssets().open(mAssetsFolder + \"/\" + version + \".json\"); InputStream input = new FileInputStream ( \"./schemas/\" + mAssetsFolder + \"/\" + version + \".json\" ); return SchemaBundle . deserialize ( input ); } \ubcc0\uacbd\ub41c \ud30c\uc77c\uc744 test\ucf54\ub4dc\uc5d0 \ub123\uc73c\uc2dc\uace0 import\ub97c \ubcc0\uacbd\ud574\uc8fc\uc2dc\uba74 \ub429\ub2c8\ub2e4. //import androidx.room.testing.MigrationTestHelper import dev.eastar.room.testing.MigrationTestHelper \uc774\uc81c UnitTest\ub97c \ub3cc\ub824 \ubcfc\uae4c\uc694? \ud83d\udc4f \ud83d\udc4f \ud83d\udc4f \uc218\uace0 \ud558\uc168\uc2b5\ub2c8\ub2e4. TL;DR # Sample Code GitHub - eastar-dev/RoomTest: room migrations","title":"Room Test 2 Migration Test"},{"location":"Room%20Test%202%20Migration%20Test%205e70dc89031448e1b5de529c223f4c61/#room-test-2-migration-test","text":"Create: 2021\ub144 10\uc6d4 5\uc77c \uc624\ud6c4 5:08 Tag: android, db, test \uc774\uae00\uc740 Room Test 1 Dao Test \uacfc \uc5f0\uacb0\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.","title":"Room Test 2 Migration Test"},{"location":"Room%20Test%202%20Migration%20Test%205e70dc89031448e1b5de529c223f4c61/#migration-test","text":"room database\uc5d0\uc11c\ub294 \ubc84\uc804\uc774 \uc788\uace0 \uc774 \ubc84\uc804\uc740 \ud504\ub85c\uadf8\ub7a8\uc758 \ubcc0\uacbd\uc5d0 \ub530\ub77c \uc774\uc804 \uc0ac\uc6a9\uc790\ub4e4\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc \ud558\uba74\uc11c \ubcc0\uacbd\ud574\uc694. \uc774\uac78 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc774\ub77c \ud574\uc694 room Migration Test\ub294 \ub2e4\ub978 test\uc640 \uc880\ub2e4\ub974\uac8c \ubd88\ud3b8\ud55c \ubd80\ubd84\uc774 \uc788\uace0 \uc8fc\uc758\ud574\uc57c \ud560\uc810\ub3c4 \uc788\uc5b4\uc694. \uc774 \uae00\uc5d0\uc11c \ud575\uc2ec\uc740 Migration Test\uace0 \uc774 \ubd80\ubd84\uc5d0 \ub300\ud574\uc11c \uc880 \ub354\uc2ec\ub3c4 \uc788\uac8c \ub2e4\ub8f0 \uc0dd\uac01\uc774\uc5d0\uc694.","title":"Migration Test"},{"location":"Room%20Test%202%20Migration%20Test%205e70dc89031448e1b5de529c223f4c61/#gradle","text":"dependencies { def room_version = \"2.4.0-alpha05\" implementation \"androidx.room:room-runtime:$room_version\" kapt \"androidx.room:room-compiler:$room_version\" implementation \"androidx.room:room-ktx:$room_version\" testImplementation \"androidx.room:room-testing:$room_version\" androidTestImplementation \"androidx.room:room-testing:$room_version\" } android { defaultConfig { javaCompileOptions { annotationProcessorOptions { arguments += [ \"room.schemaLocation\" : \" $ projectDir /schemas\" . toString (), \"room.incremental\" : \"true\" , \"room.expandProjection\" : \"true\" ] } } } }","title":"Gradle"},{"location":"Room%20Test%202%20Migration%20Test%205e70dc89031448e1b5de529c223f4c61/#android-instrumented-test","text":"","title":"Android Instrumented Test"},{"location":"Room%20Test%202%20Migration%20Test%205e70dc89031448e1b5de529c223f4c61/#comumn-add-test","text":"\uc544\ub798\uc640 \uac19\uc740 \ucf54\ub4dc\ub97c test \ud560\uaebc\uc5d0\uc694. \uae30\uc874\uc758 DB version 1 \u2192 2\ubcc0\uacbd\ub418\uba74\uc11c location\uacfc photo\uac00 \ucd94\uac00\ub410\uc5b4\uc694. val MIGRATION_1_2 = object : Migration ( 1 , 2 ) { override fun migrate ( database : SupportSQLiteDatabase ) { database . execSQL ( \"ALTER TABLE USERS ADD COLUMN location TEXT\" ) database . execSQL ( \"ALTER TABLE USERS ADD COLUMN photo TEXT\" ) } } Dao\uc5d0\uc120 UI Thread\uc5d0\uc11c \uc811\uadfc\uc774 \ubd88\uac00\ub2a5\ud558\uae30 \ub54c\ubb38\uc5d0 \uc5ec\uae30\uc11c\ub294 Coroutine\ub97c \uc0ac\uc6a9\ud588\uc5b4\uc694. \ub530\ub77c\uc11c \ub2e4\uc74c\uacfc \uac19\uc740 Instrumented Test Code\ub97c \ub9cc\ub4e4\uc218 \uc788\uc5b4\uc694. class MigrationTest { companion object { const val TEST_DB = \"migration-test\" } @get : Rule val helper : MigrationTestHelper = MigrationTestHelper ( InstrumentationRegistry . getInstrumentation (), TestDatabase :: class . java , ) @Test fun migration_1_2 () { //given helper . createDatabase ( TEST_DB , 1 ). use { it . execSQL ( \"INSERT INTO USERS ( name,level,date ) VALUES ('eastar', 'Level1' ,0);\" ) } //when helper . runMigrationsAndValidate ( TEST_DB , 2 , true , MIGRATION_1_2 ). use { //then val cursor = it . query ( \"SELECT COUNT(*) FROM USERS\" ) cursor . moveToFirst () val actual = cursor . getLong ( 0 ) cursor . close () assertThat ( actual ). isEqualTo ( 1 ) } } } Warning migration test \ub294 \uae30\ubcf8\uc801\uc73c\ub85c DB\uc758 \uad6c\uc870\ub9cc test \ud574\uc694. DB\uc758 \ub0b4\uc6a9\uc774 \uc7ac\ub300\ub85c \ubcc0\uacbd \ub410\ub294\uc9c0\ub294 \uc9c1\uc811 assert\ub97c \uc0ac\uc6a9\ud574\uc11c \ud655\uc778 \ud574\uc57c\ud574\uc694","title":"comumn add test"},{"location":"Room%20Test%202%20Migration%20Test%205e70dc89031448e1b5de529c223f4c61/#comumn-change-test","text":"\uc774\ubc88\uc5d0\ub294 \ub09c\uc774\ub3c4\uac00 \uc788\ub294 \ubcc0\uacbd \uc791\uc5c5\uc744 \ud560\ub824\uace0\ud574\uc694 \ucf54\ub4dc\ub294 \uae38\uc9c0\ub9cc \ub0b4\uc6a9\uc740 \uac04\ub2e8\ud574\uc694. date\uc758 \uac12\uc774 long\ub97c \uc0ac\uc6a9\ud574\uc11c \uc800\uc7a5 \ud588\ub294\ub370 String\ub97c \uc0ac\uc6a9\ud574\uc11c \ubcc0\uacbd \ud558\ub294 \ub0b4\uc6a9\uc785\ub2c8\ub2e4. val MIGRATION_2_3 = object : Migration ( 2 , 3 ) { override fun migrate ( database : SupportSQLiteDatabase ) { /** copy form data/schemas/dev.eastar.roomtest.data.db.TestDatabase/3.json */ val tempTable = \"\"\"CREATE TABLE IF NOT EXISTS `USERS_3` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `level` TEXT NOT NULL, `date` TEXT NOT NULL, `location` TEXT, `photo` TEXT)\"\"\" database . execSQL ( tempTable ) val cursor = database . query ( \"\"\"SELECT id, name, level, date, location, photo FROM USERS\"\"\" ) while ( cursor . moveToNext ()) { val id = cursor . getLong ( 0 ) val name = cursor . getString ( 1 ) val level = cursor . getString ( 2 ) val date = cursor . getLong ( 3 ) val location = cursor . getStringOrNull ( 4 ) val photo = cursor . getStringOrNull ( 5 ) database . execSQL ( \"\"\"INSERT INTO USERS_3 (id, name, level, date, location, photo ) VALUES ( $ id , ' $ name ', ' $ level ', ' ${ Instant . ofEpochMilli ( date ). atOffset ( ZoneOffset . UTC ). toLocalDateTime () } ', ${ location ?. let { \"' $ location '\" } ?: \" NULL \" } , ${ photo ?. let { \"' $ photo '\" } ?: \" NULL \" } );\"\"\" ) } database . execSQL ( \"DROP TABLE USERS\" ) database . execSQL ( \"ALTER TABLE USERS_3 RENAME TO USERS\" ) } } migration\uc740 table \uad6c\uc870\ub9cc \uac80\uc99d\ud574\uc8fc\uae30 \ub54c\ubb38\uc5d0 \ub0b4\uc6a9\uc740 \uc9c1\uc811 \uac80\uc99d\ud574\uc57c \ud574\uc694. \uadf8\ub9ac\uace0 \uc0dd\uac01\ubcf4\ub2e4 Table column type\ub3c4 \uc77c\uc77c\uc774 \ucc59\uaca8\uc57c \ud574\uc694 Note migrateion \uc5d0\uc11c \uc0ad\uc81c\uc640 \ubcc0\uacbd\uc744 \uc9c0\uc6d0 \ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 dummyTable \u2192 \ubcf5\uc0ac \u2192 \uc6d0\ubcf8\uc0ad\uc81c \u2192 dummyTable\uc774\ub984 \ubcc0\uacbd \uc774\ub77c\ub294 \uc5c4\uccad\ub09c \uacfc\uc815\uc744 \uac70\uccd0\uc57c \ud569\ub2c8\ub2e4. CREATE TABLE QUERY\ub294 \uc5b4\ub514\uc5d0\uc11c \uac00\uc838\uc62c\uae4c? val tempTable = \"\"\"CREATE TABLE IF NOT EXISTS `USERS_3` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `level` TEXT NOT NULL, `date` TEXT NOT NULL, `location` TEXT, `photo` TEXT)\"\"\" \uc544\ub798\ucabd\uc774 \uc81c\uac00 \uc0ac\uc6a9\ud558\ub294 table entity\uc778\ub370 \uc0dd\uac01\ud558\ub294\uac83\uacfc \uc0dd\uc131\ub41c table\uc774 \ub2e4\ub97c \uc218 \uc788\uc73c\ub2c8 \ubcf5\uc0ac\ud574\uc11c \uc0ac\uc6a9\ud558\uae30\ub97c \uad8c\uc7a5\ub4dc\ub824\uc694. @Entity ( tableName = \"USERS\" ) data class UserEntity ( @PrimaryKey ( autoGenerate = true ) val id : Long = 0 , val name : String = \"\" , val level : Level , val date : LocalDateTime = LocalDateTime . now (). withNano ( 0 ), val location : String? = \"geo: ${ Random . latitude } , ${ Random . longitude } \" , val photo : String? = \"https://picsum.photos/id/ ${ Random . nextInt ( 100 ) } /100/100\" , ) test code class MigrationTest { companion object { const val TEST_DB = \"migration-test\" } @get : Rule val helper : MigrationTestHelper = MigrationTestHelper ( InstrumentationRegistry . getInstrumentation (), TestDatabase :: class . java , ) @Test fun migration_2_3 () { //given helper . createDatabase ( TEST_DB , 2 ). use { /** 0 => UTC 1970-01-01 00:00:00.000 */ it . execSQL ( \"INSERT INTO USERS ( name,level,date,location,photo ) VALUES ('eastar', 'Level1' ,0,NULL,NULL);\" ) } //when helper . runMigrationsAndValidate ( TEST_DB , 3 , true , MIGRATION_2_3 ). use { //then val cursor = it . query ( \"SELECT id,name,level,date,location,photo FROM USERS\" ) cursor . moveToFirst () val id = cursor . getLong ( 0 ) //id val date = cursor . getString ( 3 ) //date val location = cursor . getStringOrNull ( 4 ) //location cursor . close () assertThat ( id ). isEqualTo ( 1 ) assertThat ( DateConverter . text2LocalDateTime ( date )) . isEqualTo ( DateConverter . text2LocalDateTime ( \"1970-01-01T00:00:00.000\" )) assertThat ( location ). isNull () } } }","title":"comumn change test"},{"location":"Room%20Test%202%20Migration%20Test%205e70dc89031448e1b5de529c223f4c61/#all-migration-test","text":"\uc774\ubc88 test \ud560\ub0b4\uc6a9\uc740 1\u21923\uae4c\uc9c0 \ubaa8\ub4e0 migration\uc744 Test \ud558\ub294 \ubc29\ubc95\uc744 \ud655\uc778 \ud574\ubcfc\uaed8\uc694. test code class MigrationTest { companion object { const val TEST_DB = \"migration-test\" } @get : Rule val helper : MigrationTestHelper = MigrationTestHelper ( InstrumentationRegistry . getInstrumentation (), TestDatabase :: class . java , ) @Test @Throws ( IOException :: class ) fun migrateAll () { helper . createDatabase ( TEST_DB , 1 ). use { } Room . databaseBuilder ( InstrumentationRegistry . getInstrumentation (). targetContext , TestDatabase :: class . java , TEST_DB ). addMigrations ( MIGRATION_1_2 , MIGRATION_2_3 ). build (). apply { openHelper . writableDatabase close () } } } Warning migration test \ub294 \uae30\ubcf8\uc801\uc73c\ub85c DB\uc758 \uad6c\uc870\ub9cc test \ud574\uc694. DB\uc758 \ub0b4\uc6a9\uc774 \uc7ac\ub300\ub85c \ubcc0\uacbd \ub410\ub294\uc9c0\ub294 \uc9c1\uc811 assert\ub97c \uc0ac\uc6a9\ud574\uc11c \ud655\uc778 \ud574\uc57c\ud574\uc694","title":"All Migration Test"},{"location":"Room%20Test%202%20Migration%20Test%205e70dc89031448e1b5de529c223f4c61/#unit-test","text":"Unit Test\uc5d0\uc11c test\ub97c \ud560\ub824\uba74 \ud06c\uac8c \ub2e4\ub974\uc9c0 \uc54a\uc544\uc694 \ub2e4\ub9cc. Robolectric\uc744 \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \ub364\uc73c\ub85c \uc2e4\ud589\uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\ub294\uac83\ub3c4 \ud3ec\ud568\uc774\uc5d0\uc694.","title":"Unit Test"},{"location":"Room%20Test%202%20Migration%20Test%205e70dc89031448e1b5de529c223f4c61/#robolectric","text":"gradle //robolectric dependencies { testImplementation ' org . robolectric : robolectric : 4.5 . 1 ' testImplementation ' androidx . test . ext : junit - ktx : 1.1 . 3 ' } android { testOptions { unitTests { includeAndroidResources = true } } } unit test code @Config ( sdk = [ 30 ] ) @RunWith ( RobolectricTestRunner :: class ) class TestDatabaseUnitTest { ... \uc81c\uac00 \uc54c\uace0 \uc788\ub294 \uac00\uc7a5 \uac04\ub2e8\ud55c Robolectric\uc0ac\uc6a9\ubc95\uc774\uc5d0\uc694","title":"Robolectric"},{"location":"Room%20Test%202%20Migration%20Test%205e70dc89031448e1b5de529c223f4c61/#unit-test-code","text":"android test \ub791 \ub3d9\uc77c\ud569\ub2c8\ub2e4. @Config ( sdk = [ 30 ] ) @RunWith ( RobolectricTestRunner :: class ) class MigrationUnitTest { companion object { const val TEST_DB = \"migration-test\" } @get : Rule val helper : MigrationTestHelper = MigrationTestHelper ( InstrumentationRegistry . getInstrumentation (), TestDatabase :: class . java , ) @Test @Throws ( IOException :: class ) fun migrateAll () { helper . createDatabase ( TEST_DB , 1 ). use { } Room . databaseBuilder ( InstrumentationRegistry . getInstrumentation (). targetContext , TestDatabase :: class . java , TEST_DB ). addMigrations ( MIGRATION_1_2 , MIGRATION_2_3 ). build (). apply { openHelper . writableDatabase close () } } @Test fun migration_1_2 () { //given helper . createDatabase ( TEST_DB , 1 ). use { it . execSQL ( \"INSERT INTO USERS ( name,level,date ) VALUES ('eastar', 'Level1' ,0);\" ) } //when helper . runMigrationsAndValidate ( TEST_DB , 2 , true , MIGRATION_1_2 ). use { //then val cursor = it . query ( \"SELECT COUNT(*) FROM USERS\" ) cursor . moveToFirst () val actual = cursor . getLong ( 0 ) cursor . close () assertThat ( actual ). isEqualTo ( 1 ) } } @Test fun migration_2_3 () { //given helper . createDatabase ( TEST_DB , 2 ). use { /** 0 => UTC 1970-01-01 00:00:00.000 */ it . execSQL ( \"INSERT INTO USERS ( name,level,date,location,photo ) VALUES ('eastar', 'Level1' ,0,NULL,NULL);\" ) } //when helper . runMigrationsAndValidate ( TEST_DB , 3 , true , MIGRATION_2_3 ). use { //then val cursor = it . query ( \"SELECT id,name,level,date,location,photo FROM USERS\" ) cursor . moveToFirst () val id = cursor . getLong ( 0 ) //id val date = cursor . getString ( 3 ) //date val location = cursor . getStringOrNull ( 4 ) //location cursor . close () assertThat ( id ). isEqualTo ( 1 ) assertThat ( DateConverter . text2LocalDateTime ( date )) . isEqualTo ( DateConverter . text2LocalDateTime ( \"1970-01-01T00:00:00.000\" )) assertThat ( location ). isNull () } } } \ub2e4\ub9cc \uc544\ub798\uc640 \uac19\uc740 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. Cannot find the schema file in the assets folder. Make sure to include the exported json schemas in your test assert inputs. See https://developer.android.com/training/data-storage/room/migrating-db-versions#export-schema for details. Missing file: dev.eastar.roomtest.data.db.TestDatabase/1.json java.io.FileNotFoundException: Cannot find the schema file in the assets folder. Make sure to include the exported json schemas in your test assert inputs. See https://developer.android.com/training/data-storage/room/migrating-db-versions#export-schema for details. Missing file: dev.eastar.roomtest.data.db.TestDatabase/1.json at androidx.room.testing.MigrationTestHelper.loadSchema(MigrationTestHelper.java:484) at androidx.room.testing.MigrationTestHelper.createDatabase(MigrationTestHelper.java:238) at dev.eastar.roomtest.data.db.MigrationUnitTest.migrateAll(MigrationUnitTest.kt:33) at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.base/java.lang.reflect.Method.invoke(Method.java:566) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:61) at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) at org.robolectric.RobolectricTestRunner$HelperTestRunner$1.evaluate(RobolectricTestRunner.java:575) at org.robolectric.internal.SandboxTestRunner$2.lambda$evaluate$0(SandboxTestRunner.java:278) at org.robolectric.internal.bytecode.Sandbox.lambda$runOnMainThread$0(Sandbox.java:89) at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) at java.base/java.lang.Thread.run(Thread.java:834) \uc694\uc57d\ud558\uba74 exported json schemas\uac00 \uc548\ub41c\uac83 \uac19\uc73c\ub2c8 \ub2e4\uc74c \uc8fc\uc18c\uc5d0 \uac00\uc11c \uc790\uc138\ud55c\uac74 \ud655\uc778\ud574\ubd10\ub77c. \ubabb\ucc3e\uc740 \ud30c\uc77c\uc740 ~~ .json\ud30c\uc77c\uc774\ub2e4. \ub780 \ub0b4\uc6a9\uc785\ub2c8\ub2e4. \ud574\ub2f9 \uc8fc\uc18c\uc5d0 \uac00\uc11c\ubcf4\uba74 \uc774\ubbf8 \uc124\uc815\ud55c gradle setting\uc5d0 \ub300\ud55c \uc774\uc57c\uae30\ub97c \ud558\uace0 \uc788\ub124\uc694. Cannot find the schema file in the assets folder. Make sure to include the exported json schemas in your test assert inputs. See https://developer.android.com/training/data-storage/room/migrating-db-versions#export-schema for details. Missing file: dev.eastar.roomtest.data.db.TestDatabase/1.json \uc544\ub798 \ud30c\uc77c\uc744 \uc18c\uc2a4\uc5d0 \ub123\uc5b4 \ubc14\uafd4\uce58\uae30 \uaf3c\uc218\ub97c \uc368\uc57c \ud569\ub2c8\ub2e4. \ucca8\ubd80\ud30c\uc77c MigrationTestHelper.java \ud30c\uc77c\uc5d0 \ucd9c\ucc98\ub294 \uc544\ub798 \ucf54\ub4dc\ub97c \ucd94\uc801\ud574\uc11c \ub514\ucef4\ud30c\uc77c\ud55c \ucf54\ub4dc\uc5d0\uc694. \uad8c\uc7a5\uc740 https://cs.android.com/ \uc5d0\uc11c \ucf54\ub4dc\ub97c \ucc3e\uc73c\uc154\uc11c \ub123\ub294\uac8c \uc88b\uc2b5\ub2c8\ub2e4. import androidx.room.testing.MigrationTestHelper \uc774 \ud30c\uc77c\uc744 \uadf8\ub0e5 \ub123\uc73c\uc2dc\uba74 \uc548\ub418\uace0 unit test\uc5d0\uc11c getAssets()\uc744 \ud1b5\ud574 1.json \ud30c\uc77c\uc744 \uc77d\uc744 \uc218 \uc5c6\uc5b4\uc11c \ub098\uc624\ub294 \uc624\ub958\uc774\uae30 \ub54c\ubb38\uc5d0 \ud574\ub2f9 \ubd80\ubd84\uc744 \uc218\uc815\ud574\uc11c \ub123\uc2b5\ub2c8\ub2e4. \uc544\ub798\ub294 \ubcc0\uacbd\ud55c \ubd80\ubd84\uc740 \uc774\uc5d0\uc694. private SchemaBundle loadSchema ( Context context , int version ) throws IOException { // InputStream input = context.getAssets().open(mAssetsFolder + \"/\" + version + \".json\"); InputStream input = new FileInputStream ( \"./schemas/\" + mAssetsFolder + \"/\" + version + \".json\" ); return SchemaBundle . deserialize ( input ); } \ubcc0\uacbd\ub41c \ud30c\uc77c\uc744 test\ucf54\ub4dc\uc5d0 \ub123\uc73c\uc2dc\uace0 import\ub97c \ubcc0\uacbd\ud574\uc8fc\uc2dc\uba74 \ub429\ub2c8\ub2e4. //import androidx.room.testing.MigrationTestHelper import dev.eastar.room.testing.MigrationTestHelper \uc774\uc81c UnitTest\ub97c \ub3cc\ub824 \ubcfc\uae4c\uc694? \ud83d\udc4f \ud83d\udc4f \ud83d\udc4f \uc218\uace0 \ud558\uc168\uc2b5\ub2c8\ub2e4.","title":"unit test code"},{"location":"Room%20Test%202%20Migration%20Test%205e70dc89031448e1b5de529c223f4c61/#tldr","text":"Sample Code GitHub - eastar-dev/RoomTest: room migrations","title":"TL;DR"},{"location":"Truth%EB%A5%BC%20%EC%86%8C%EA%B0%9C%20%ED%95%A9%EB%8B%88%EB%8B%A4%20dfdd28fc2eb748448521b94f89e30c27/","text":"Google Truth\ub97c \uc18c\uac1c \ud569\ub2c8\ub2e4. # Create: 2021\ub144 8\uc6d4 18\uc77c \uc624\ud6c4 2:01 Tag: android, test blog: Yes What is Truth? # \ud3b8\uc548\ud558\uac8c \uc0ac\uc6a9\ud560\uc218 \uc788\ub294 Java \ubc0f Android\uc6a9 Assertions library Guava \ud300\uc5d0\uc11c \uc18c\uc720\ud558\uace0 \uc720\uc9c0\ud558\ub294 Assertions library Google \uc790\uccb4 \ucf54\ub4dc\ubca0\uc774\uc2a4\uc758 \ub300\ubd80\ubd84\uc758 \ud14c\uc2a4\ud2b8\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Why? # \uc774\ubbf8 assertEquals\uac00 \uc788\ub294\ub370 \uc774\uac83 \ubc30\uc6cc\uc57c \ud558\ub098\uc694? asis assertEquals ( ImmutableMultiset . of ( \"guava\" , \"dagger\" , \"truth\" , \"auto\" , \"caliper\" ), HashMultiset . create ( projectsByTeam (). get ( \"corelibs\" ))); truth assertThat ( projectsByTeam ()) . valuesForKey ( \"corelibs\" ) . containsExactly ( \"guava\" , \"dagger\" , \"truth\" , \"auto\" , \"caliper\" ); \ud2b9\ud788 \uc790\ub3d9 \uc644\uc131 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uba74 Truth \ucf54\ub4dc\ub97c \ub354 \ube60\ub974\uac8c \uc785\ub825\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc77d\uae30 \uc27d\uc2b5\ub2c8\ub2e4.(\uc601\uc5b4\uac00 \ubaa8\uad6d\uc5b4\uc778\uacbd\uc6b0\ub294 \ub354\uc6b1\ub354) less boilerplate actual \uac12\uc744 \uba3c\uc800 \ub123\uc73c\uba74 \ucee8\ud14d\uc2a4\ud2b8\uac00 \uc124\uc815 output message\uac00 \ubbf8\ub824\ud568\ub2c8\ub2e4. value of : projectsByTeam().valuesForKey(corelibs) missing (1) : truth \u2500\u2500\u2500 expected : [guava, dagger, truth, auto, caliper] but was : [guava, auto, dagger, caliper] multimap was: {corelibs=[guava, auto, dagger, caliper]} at com.google.common.truth.example.DemoTest.testTruth(DemoTest.java:71) AssertJ\uc758 \ud56d\ubcc0 # Truth\uc640 AssertJ \ub294 \ub9e4\uc6b0 \uc720\uc0ac\ud569\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \ub354 \uac04\ub2e8\ud55c API\ub97c \uc704\ud574 Truth\ub97c \uc120\ud638 Truth \ub97c \ub9cc\ub4e4\ub54c AssertJ\ub294 \uc874\uc7ac \ud558\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4. Hamcrest\uc758 \ud56d\ubcc0 # \uc11c\ub85c \ub9ce\uc774 \ub2e4\ub984 Truth\ub294 chained method calls\uc774 \uac00\ub2a5 Hamcrest\uc640 \ucc28\uc774 Hamcrest\ub294 \ubcf4\ub2e4 \uc77c\ubc18\uc801\uc778 \"\ub9e4\uce6d\" \ub77c\uc774\ube0c\ub7ec\ub9ac\ub85c, \uc5b4\uc124\uc158\uc744 \ub9cc\ub4dc\ub294 \uac83\ubfd0\ub9cc \uc544\ub2c8\ub77c \ubaa8\uc758 \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ub300\ud55c \uae30\ub300\uce58\ub97c \uc124\uc815\ud558\ub294 \ub370\uc5d0\ub3c4 \uc0ac\uc6a9\ub418\uba70 \ub9e4\ucc98\ub294 \uc784\uc758\uc758 \ubc29\uc2dd\uc73c\ub85c \ud568\uaed8 \uad6c\uc131\ub429\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc774\ub7ec\ud55c \uc720\uc5f0\uc131\uc740 \ubcf5\uc7a1\ud55c \uc81c\ub124\ub9ad\uc744 \ud544\uc694\ub85c \ud558\uba70 Hamcrest\uac00 \uc77d\uc744 \uc218 \uc788\ub294 \uc624\ub958 \uba54\uc2dc\uc9c0\ub97c \uc0dd\uc131\ud558\uae30 \uc5b4\ub835\uac8c \ub9cc\ub4ed\ub2c8\ub2e4. \uc6d0\ubb38 Hamcrest is a more general \u201cmatching\u201d library, used not only for making assertions but also for setting expections on mocking frameworks, with matchers composed together in arbitrary ways. But this flexibility requires complex generics and makes it hard for Hamcrest to produce readable failure messages. TL;DR # gradle # testImplementation \"com.google.truth:truth:1.1.3\" //java8 \ud655\uc7a5\uc774 \ud544\uc694\ud55c\uacbd\uc6b0 testImplementation \"com.google.truth.extensions:truth-java8-extension:1.1.3\" import # import static com . google . common . truth . Truth . assertThat import static com . google . common . truth . Truth . assertWithMessage sample # String string = \"awesome\" ; assertThat ( string ). startsWith ( \"awe\" ); assertWithMessage ( \"Without me, it's just aweso\" ). that ( string ). contains ( \"me\" ); Iterable < Color > googleColors = googleLogo . getColors (); assertThat ( googleColors ) . containsExactly ( BLUE , RED , YELLOW , BLUE , GREEN , RED ) . inOrder (); Tip Truth.assertThat(actual) \uc774\ub77c\uace0 \uce58\uace0 \uc810\uc744 \uccd0!! import static com.google.common.truth.Truth.assertThat \ud55c\uacbd\uc6b0\ub294 assertThat(actual)","title":"Google Truth\ub97c \uc18c\uac1c \ud569\ub2c8\ub2e4."},{"location":"Truth%EB%A5%BC%20%EC%86%8C%EA%B0%9C%20%ED%95%A9%EB%8B%88%EB%8B%A4%20dfdd28fc2eb748448521b94f89e30c27/#google-truth","text":"Create: 2021\ub144 8\uc6d4 18\uc77c \uc624\ud6c4 2:01 Tag: android, test blog: Yes","title":"Google Truth\ub97c \uc18c\uac1c \ud569\ub2c8\ub2e4."},{"location":"Truth%EB%A5%BC%20%EC%86%8C%EA%B0%9C%20%ED%95%A9%EB%8B%88%EB%8B%A4%20dfdd28fc2eb748448521b94f89e30c27/#what-is-truth","text":"\ud3b8\uc548\ud558\uac8c \uc0ac\uc6a9\ud560\uc218 \uc788\ub294 Java \ubc0f Android\uc6a9 Assertions library Guava \ud300\uc5d0\uc11c \uc18c\uc720\ud558\uace0 \uc720\uc9c0\ud558\ub294 Assertions library Google \uc790\uccb4 \ucf54\ub4dc\ubca0\uc774\uc2a4\uc758 \ub300\ubd80\ubd84\uc758 \ud14c\uc2a4\ud2b8\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.","title":"What is Truth?"},{"location":"Truth%EB%A5%BC%20%EC%86%8C%EA%B0%9C%20%ED%95%A9%EB%8B%88%EB%8B%A4%20dfdd28fc2eb748448521b94f89e30c27/#why","text":"\uc774\ubbf8 assertEquals\uac00 \uc788\ub294\ub370 \uc774\uac83 \ubc30\uc6cc\uc57c \ud558\ub098\uc694? asis assertEquals ( ImmutableMultiset . of ( \"guava\" , \"dagger\" , \"truth\" , \"auto\" , \"caliper\" ), HashMultiset . create ( projectsByTeam (). get ( \"corelibs\" ))); truth assertThat ( projectsByTeam ()) . valuesForKey ( \"corelibs\" ) . containsExactly ( \"guava\" , \"dagger\" , \"truth\" , \"auto\" , \"caliper\" ); \ud2b9\ud788 \uc790\ub3d9 \uc644\uc131 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uba74 Truth \ucf54\ub4dc\ub97c \ub354 \ube60\ub974\uac8c \uc785\ub825\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc77d\uae30 \uc27d\uc2b5\ub2c8\ub2e4.(\uc601\uc5b4\uac00 \ubaa8\uad6d\uc5b4\uc778\uacbd\uc6b0\ub294 \ub354\uc6b1\ub354) less boilerplate actual \uac12\uc744 \uba3c\uc800 \ub123\uc73c\uba74 \ucee8\ud14d\uc2a4\ud2b8\uac00 \uc124\uc815 output message\uac00 \ubbf8\ub824\ud568\ub2c8\ub2e4. value of : projectsByTeam().valuesForKey(corelibs) missing (1) : truth \u2500\u2500\u2500 expected : [guava, dagger, truth, auto, caliper] but was : [guava, auto, dagger, caliper] multimap was: {corelibs=[guava, auto, dagger, caliper]} at com.google.common.truth.example.DemoTest.testTruth(DemoTest.java:71)","title":"Why?"},{"location":"Truth%EB%A5%BC%20%EC%86%8C%EA%B0%9C%20%ED%95%A9%EB%8B%88%EB%8B%A4%20dfdd28fc2eb748448521b94f89e30c27/#assertj","text":"Truth\uc640 AssertJ \ub294 \ub9e4\uc6b0 \uc720\uc0ac\ud569\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \ub354 \uac04\ub2e8\ud55c API\ub97c \uc704\ud574 Truth\ub97c \uc120\ud638 Truth \ub97c \ub9cc\ub4e4\ub54c AssertJ\ub294 \uc874\uc7ac \ud558\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.","title":"AssertJ\uc758 \ud56d\ubcc0"},{"location":"Truth%EB%A5%BC%20%EC%86%8C%EA%B0%9C%20%ED%95%A9%EB%8B%88%EB%8B%A4%20dfdd28fc2eb748448521b94f89e30c27/#hamcrest","text":"\uc11c\ub85c \ub9ce\uc774 \ub2e4\ub984 Truth\ub294 chained method calls\uc774 \uac00\ub2a5 Hamcrest\uc640 \ucc28\uc774 Hamcrest\ub294 \ubcf4\ub2e4 \uc77c\ubc18\uc801\uc778 \"\ub9e4\uce6d\" \ub77c\uc774\ube0c\ub7ec\ub9ac\ub85c, \uc5b4\uc124\uc158\uc744 \ub9cc\ub4dc\ub294 \uac83\ubfd0\ub9cc \uc544\ub2c8\ub77c \ubaa8\uc758 \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ub300\ud55c \uae30\ub300\uce58\ub97c \uc124\uc815\ud558\ub294 \ub370\uc5d0\ub3c4 \uc0ac\uc6a9\ub418\uba70 \ub9e4\ucc98\ub294 \uc784\uc758\uc758 \ubc29\uc2dd\uc73c\ub85c \ud568\uaed8 \uad6c\uc131\ub429\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc774\ub7ec\ud55c \uc720\uc5f0\uc131\uc740 \ubcf5\uc7a1\ud55c \uc81c\ub124\ub9ad\uc744 \ud544\uc694\ub85c \ud558\uba70 Hamcrest\uac00 \uc77d\uc744 \uc218 \uc788\ub294 \uc624\ub958 \uba54\uc2dc\uc9c0\ub97c \uc0dd\uc131\ud558\uae30 \uc5b4\ub835\uac8c \ub9cc\ub4ed\ub2c8\ub2e4. \uc6d0\ubb38 Hamcrest is a more general \u201cmatching\u201d library, used not only for making assertions but also for setting expections on mocking frameworks, with matchers composed together in arbitrary ways. But this flexibility requires complex generics and makes it hard for Hamcrest to produce readable failure messages.","title":"Hamcrest\uc758 \ud56d\ubcc0"},{"location":"Truth%EB%A5%BC%20%EC%86%8C%EA%B0%9C%20%ED%95%A9%EB%8B%88%EB%8B%A4%20dfdd28fc2eb748448521b94f89e30c27/#tldr","text":"","title":"TL;DR"},{"location":"Truth%EB%A5%BC%20%EC%86%8C%EA%B0%9C%20%ED%95%A9%EB%8B%88%EB%8B%A4%20dfdd28fc2eb748448521b94f89e30c27/#gradle","text":"testImplementation \"com.google.truth:truth:1.1.3\" //java8 \ud655\uc7a5\uc774 \ud544\uc694\ud55c\uacbd\uc6b0 testImplementation \"com.google.truth.extensions:truth-java8-extension:1.1.3\"","title":"gradle"},{"location":"Truth%EB%A5%BC%20%EC%86%8C%EA%B0%9C%20%ED%95%A9%EB%8B%88%EB%8B%A4%20dfdd28fc2eb748448521b94f89e30c27/#import","text":"import static com . google . common . truth . Truth . assertThat import static com . google . common . truth . Truth . assertWithMessage","title":"import"},{"location":"Truth%EB%A5%BC%20%EC%86%8C%EA%B0%9C%20%ED%95%A9%EB%8B%88%EB%8B%A4%20dfdd28fc2eb748448521b94f89e30c27/#sample","text":"String string = \"awesome\" ; assertThat ( string ). startsWith ( \"awe\" ); assertWithMessage ( \"Without me, it's just aweso\" ). that ( string ). contains ( \"me\" ); Iterable < Color > googleColors = googleLogo . getColors (); assertThat ( googleColors ) . containsExactly ( BLUE , RED , YELLOW , BLUE , GREEN , RED ) . inOrder (); Tip Truth.assertThat(actual) \uc774\ub77c\uace0 \uce58\uace0 \uc810\uc744 \uccd0!! import static com.google.common.truth.Truth.assertThat \ud55c\uacbd\uc6b0\ub294 assertThat(actual)","title":"sample"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/","text":"Dev Blog with Notion # Create: 2021\ub144 9\uc6d4 22\uc77c \uc624\ud6c4 11:55 MkDocs # \uc774\uae00\uc740 \ube14\ub85c\uadf8\uc758 \uc124\uce58\uc5d0 \uc911\uc810\uc774 \uc5c6\uace0 Notion\uc744 \uc774\uc6a9\ud574\uc11c \uae00\uc744 \uc815\ub9ac\ud558\ub294 \ubd84\ub4e4\uc5d0\uac8c Mkdocs Material \uc774\uc6a9\ud574\uc11c \uc815\uc801 \ud398\uc774\uc9c0\ub97c \ub9cc\ub4e4\uc5b4 \uc6b4\uc601\ud558\ub294 \ubd84\ub4e4\uac8c \ub3c4\uc6c0\uc744 \uc8fc\uace0\uc790 \ub9cc\ub4e4\uc5c8\ub2e4. \ub530\ub77c\uc11c Mkdocs Material\uc744 \uc774\uc6a9\ud55c \uc815\uc801\ube14\ub85c\uadf8 \uc0dd\uc131\uc5d0 \ub300\ud574\uc11c\ub294 \uc790\uc138\ud788 \ub098\uc640 \uc788\uc9c0 \uc54a\ub2e4. Note \uc774 \ud398\uc774\uc9c0\uc744 \ubcf4\uc9c0 \ubabb\ud588\ub2e4\uba74 \uc774\uc0dd\uac01\uc744 \ud558\uc9c0 \uc54a\uc558\uc744\uac83\uc774\ub2e4. https://squidfunk.github.io/mkdocs-material/reference/abbreviations/ \ube14\ub85c\uadf8\uc5d0\ub294 \uc548\ub4dc\ub85c\uc774\ub4dc \uad00\ub828 \ub0b4\uc6a9\ub9cc \uc62c\ub9ac\ub824 \ud588\uc73c\ub098 \uc6b4\uc601\uc744 \uc704\ud574 \uc774\uae00\uc744 \ub9e4\ubc88\ubcf4\uac8c \ub418\uc11c \uc62c\ub9b0\ub2e4. \uc124\uce58 # Install # pip install mkdocs - material Upgrade # pip install --upgrade mkdocs-material Inspect # Inspect the currently installed version with: pip show mkdocs-material \uc6b4\uc601 # \uc11c\ubc84\uc2dc\uc791 # mkdocs serve \ube4c\ub4dc # mkdocs build \ubc30\ud3ec # git add . git commit -m \"posting\" git push origin master \ube4c\ub4dc \ubc0f \ubc30\ud3ec # Windows mkdocs build git add . git commit -m \"posting\" git push origin master cls Mac mkdocs build git add . git commit -m \"posting\" git push origin master clear \uae00 \uc791\uc131\ubc29\ubc95 # \uc81c\ubaa9 # \uc81c\ubaa9\uc5d0 \uad04\ud638\uac00 \ub4e4\uc5b4\uac00\ub294 \ubb38\uc11c\ub97c \ub9cc\ub4e4\uc9c0 \ub9d0\uc790 \ubb38\uc11c\uc758 \uc81c\ubaa9\uc740 \uc774\ubbf8\uc9c0 \ud3f4\ub354\uc758 \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294\ub370 \uc774\ubbf8\uc9c0 \ub9c1\ud06c \uc5f0\uacb0\uc2dc \ub9c8\ud06c\ub2e4\uc6b4 \ubb38\ubc95\uacfc \ub9c1\ud06c\ub97c \uac78\ub54c \uc0ac\uc6a9\ud558\ub294 \uad04\ud638\uac00 \ucda9\ub3cc \ud574\uc11c \uc218\uc815\uc774 \ubd88\uac00\ud53c\ud574\uc9c4\ub2e4. Note # \uc2dc\uc791\uc744 !!!\ub85c \uc2dc\uc791\ud558\ub2e4. \uc904\ubc14\uafc8\uc740 shift + enter \uc904 \ub05d\uc5d0 \ub744\uc5ec\uc4f0\uae30 4\uce78 \ucd94\uac00 Note \uc5d0\uc11c \uc0ac\uc6a9\ud560\uc218 \uc788\ub294 \ucd94\uac00 ICON \ud655\uc778(\ud074\ub9ad) !!! note \uc774 \ud398\uc774\uc9c0\uc744 \ubcf4\uc9c0 \ubabb\ud588\ub2e4\uba74 \uc774\uc0dd\uac01\uc744 \ud558\uc9c0 \uc54a\uc558\uc744\uac83\uc774\ub2e4 . https : //squidfunk.github.io/mkdocs-material/reference/abbreviations/ \uacb0\uacfc\ubb3c Note \uc774 \ud398\uc774\uc9c0\uc744 \ubcf4\uc9c0 \ubabb\ud588\ub2e4\uba74 \uc774\uc0dd\uac01\uc744 \ud558\uc9c0 \uc54a\uc558\uc744\uac83\uc774\ub2e4. https://squidfunk.github.io/mkdocs-material/reference/abbreviations/ Code # \ucf54\ub4dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c ```kotlin ~~~ ``` \uacfc \uac19\uc740 \ud615\ud0dc\ub85c \ub098\ud0c0\ub294\ub2e4. fun main () { println ( \"hello world\" ) } ``` kotlin fun main () { println ( \"hello world\" ) } ``` Code highlight # hl_lines=\"2\" \ub97c \uc774\uc6a9\ud574\uc11c \ucf54\ub4dc\uc5d0 highlight\ub97c \ub123\uc5c8\uc5b4\uc694 fun main () { println ( \"hello world\" ) } ``` kotlin hl_lines = \"2\" fun main () { println ( \"hello world\" ) } ``` \uc120\ud0dd\ud615 \ucf54\ub4dc # \uc544\ub798\uc640 \uac19\uc740 \ud615\ud0dc\ub97c \ud45c\ud604\ud558\ub824\uba74 gradle dependencies { coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5' } kotlin dependencies { coreLibraryDesugaring ( \"com.android.tools:desugar_jdk_libs:1.1.5\" ) } \ub2e4\uc74c markdown \ud30c\uc77c\uc744 \ucd9c\ub825\uc744 \ud558\uba74\ub41c\ub2e4. === \"gradle\" ``` groovy dependencies { coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5' } ``` === \"kotlin\" ``` kotlin dependencies { coreLibraryDesugaring ( \"com.android.tools:desugar_jdk_libs:1.1.5\" ) } ``` Warning \uc774 \ud615\ud0dc\ub97c \uc644\ubcbd\ud558\uac8c \uc9c0\uc6d0\ud558\ub294 notion\uc758 \ubb38\ubc95\uc740 \uc5c6\ub2e4 \ud604 \uc0c1\ud0dc\uc5d0\uc11c \uac00\uc7a5 \ube44\uc2b7\ud55c \ubb38\ubc95\uc740 \uc544\ub798\uc640 \uac19\ub2e4. \uc544\ub798\uc640 \uac19\uc774 \uc791\uc5c5\ud6c4 ```\uc2dc\uc791 \ubd80\ubd84\uacfc ```\ub05d\ubd80\ubd84\uc744 \ud0ed\uc73c\ub85c \ubc00\uc5b4\uc11c \uc218\uc815\ud558\ub294 \uac83\uc774\ub2e4 \ucd9c\ub825 \uacb0\uacfc\ubb3c === \"gradle\" ``` groovy dependencies { coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5' } ``` === \"kotlin\" ``` kotlin dependencies { coreLibraryDesugaring ( \"com.android.tools:desugar_jdk_libs:1.1.5\" ) } ``` \uc218\uc815\ud6c4 === \"gradle\" ``` groovy dependencies { coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5' } ``` === \"kotlin\" ``` kotlin dependencies { coreLibraryDesugaring ( \"com.android.tools:desugar_jdk_libs:1.1.5\" ) } ``` \ub2e4\uc74c\ubc29\ubc95\uc740 \ubaa9\ub85d\ud615\uc73c\ub85c \uc791\uc131\ud558\ub294\uac83\uc774\ub2e4. \ud1a0\uae00 \ud56d\ubaa9\uc73c\ub85c \uc791\uc131 Note \uc801\ub2f9\ud55c\uac83\uc744 \uc120\ud0dd\ud560\uc218 \ubc16\uc5d0 \uc5c6\ub2e4 \uc774\ubbf8\uc9c0 \ub9c1\ud06c # notion \uc5d0\uc11c \uc124\uc815 \u2192 \ub0b4\ubcf4\ub0b4\uae30 \u2192 markdown\uc744 \uc0ac\uc6a9\ud574\uc11c \ub0b4\ubcf4\ub0b4\uba74 zip \ud615\ud0dc\ub85c \uc555\ucd95\ub41c \uc0c1\ud0dc\uc774\uace0 \ud574\ub2f9 \uc774\ubbf8\uc9c0 \ub9c1\ud06c\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uaddc\uce59\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc9c4\ub2e4. {\ubb38\uc11c\uc774\ub984}.mk {\ubb38\uc11c\uc774\ub984}+ +--- Untitled.png +--- Untitled 1.png +--- Untitled 2.png +--- ... +--- Untitled N.png \uadf8\ub9ac\uace0 \uc774 \ud30c\uc77c\uc744 build \ud558\uac8c \ub418\uba74 \uc544\ub798 \ud615\ud0dc\ub85c \ub098\uc628\ub2e4 {\ubb38\uc11c\uc774\ub984}+ +--- index.html +--- Untitled.png +--- Untitled 1.png +--- Untitled 2.png +--- ... +--- Untitled N.png \ub530\ub77c\uc11c \uc774\ubbf8\uc9c0\uc758 \uacbd\ub85c\ub97c \ubcc0\uacbd\ud574\uc904 \ud544\uc694\uac00 \uc788\ub294\ub370 \uc544\ub798 \uc815\uaddc\uc2dd\uc744 \ud1b5\ud574\uc11c \ubcc0\uacbd\ud558\uc790 \ucc3e\uae30 : !\\[Untitled\\]\\(.*\\/(Untitled(?:|%20\\d+))\\.png\\) \ubc14\uafb8\uae30 : ![Untitled]($1.png) Another Page Link # Index page Link [Index page Link][2] [2]: index.md","title":"Dev Blog with Notion"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#dev-blog-with-notion","text":"Create: 2021\ub144 9\uc6d4 22\uc77c \uc624\ud6c4 11:55","title":"Dev Blog with Notion"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#mkdocs","text":"\uc774\uae00\uc740 \ube14\ub85c\uadf8\uc758 \uc124\uce58\uc5d0 \uc911\uc810\uc774 \uc5c6\uace0 Notion\uc744 \uc774\uc6a9\ud574\uc11c \uae00\uc744 \uc815\ub9ac\ud558\ub294 \ubd84\ub4e4\uc5d0\uac8c Mkdocs Material \uc774\uc6a9\ud574\uc11c \uc815\uc801 \ud398\uc774\uc9c0\ub97c \ub9cc\ub4e4\uc5b4 \uc6b4\uc601\ud558\ub294 \ubd84\ub4e4\uac8c \ub3c4\uc6c0\uc744 \uc8fc\uace0\uc790 \ub9cc\ub4e4\uc5c8\ub2e4. \ub530\ub77c\uc11c Mkdocs Material\uc744 \uc774\uc6a9\ud55c \uc815\uc801\ube14\ub85c\uadf8 \uc0dd\uc131\uc5d0 \ub300\ud574\uc11c\ub294 \uc790\uc138\ud788 \ub098\uc640 \uc788\uc9c0 \uc54a\ub2e4. Note \uc774 \ud398\uc774\uc9c0\uc744 \ubcf4\uc9c0 \ubabb\ud588\ub2e4\uba74 \uc774\uc0dd\uac01\uc744 \ud558\uc9c0 \uc54a\uc558\uc744\uac83\uc774\ub2e4. https://squidfunk.github.io/mkdocs-material/reference/abbreviations/ \ube14\ub85c\uadf8\uc5d0\ub294 \uc548\ub4dc\ub85c\uc774\ub4dc \uad00\ub828 \ub0b4\uc6a9\ub9cc \uc62c\ub9ac\ub824 \ud588\uc73c\ub098 \uc6b4\uc601\uc744 \uc704\ud574 \uc774\uae00\uc744 \ub9e4\ubc88\ubcf4\uac8c \ub418\uc11c \uc62c\ub9b0\ub2e4.","title":"MkDocs"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#_1","text":"","title":"\uc124\uce58"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#install","text":"pip install mkdocs - material","title":"Install"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#upgrade","text":"pip install --upgrade mkdocs-material","title":"Upgrade"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#inspect","text":"Inspect the currently installed version with: pip show mkdocs-material","title":"Inspect"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#_2","text":"","title":"\uc6b4\uc601"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#_3","text":"mkdocs serve","title":"\uc11c\ubc84\uc2dc\uc791"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#_4","text":"mkdocs build","title":"\ube4c\ub4dc"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#_5","text":"git add . git commit -m \"posting\" git push origin master","title":"\ubc30\ud3ec"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#_6","text":"Windows mkdocs build git add . git commit -m \"posting\" git push origin master cls Mac mkdocs build git add . git commit -m \"posting\" git push origin master clear","title":"\ube4c\ub4dc \ubc0f \ubc30\ud3ec"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#_7","text":"","title":"\uae00 \uc791\uc131\ubc29\ubc95"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#_8","text":"\uc81c\ubaa9\uc5d0 \uad04\ud638\uac00 \ub4e4\uc5b4\uac00\ub294 \ubb38\uc11c\ub97c \ub9cc\ub4e4\uc9c0 \ub9d0\uc790 \ubb38\uc11c\uc758 \uc81c\ubaa9\uc740 \uc774\ubbf8\uc9c0 \ud3f4\ub354\uc758 \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294\ub370 \uc774\ubbf8\uc9c0 \ub9c1\ud06c \uc5f0\uacb0\uc2dc \ub9c8\ud06c\ub2e4\uc6b4 \ubb38\ubc95\uacfc \ub9c1\ud06c\ub97c \uac78\ub54c \uc0ac\uc6a9\ud558\ub294 \uad04\ud638\uac00 \ucda9\ub3cc \ud574\uc11c \uc218\uc815\uc774 \ubd88\uac00\ud53c\ud574\uc9c4\ub2e4.","title":"\uc81c\ubaa9"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#note","text":"\uc2dc\uc791\uc744 !!!\ub85c \uc2dc\uc791\ud558\ub2e4. \uc904\ubc14\uafc8\uc740 shift + enter \uc904 \ub05d\uc5d0 \ub744\uc5ec\uc4f0\uae30 4\uce78 \ucd94\uac00 Note \uc5d0\uc11c \uc0ac\uc6a9\ud560\uc218 \uc788\ub294 \ucd94\uac00 ICON \ud655\uc778(\ud074\ub9ad) !!! note \uc774 \ud398\uc774\uc9c0\uc744 \ubcf4\uc9c0 \ubabb\ud588\ub2e4\uba74 \uc774\uc0dd\uac01\uc744 \ud558\uc9c0 \uc54a\uc558\uc744\uac83\uc774\ub2e4 . https : //squidfunk.github.io/mkdocs-material/reference/abbreviations/ \uacb0\uacfc\ubb3c Note \uc774 \ud398\uc774\uc9c0\uc744 \ubcf4\uc9c0 \ubabb\ud588\ub2e4\uba74 \uc774\uc0dd\uac01\uc744 \ud558\uc9c0 \uc54a\uc558\uc744\uac83\uc774\ub2e4. https://squidfunk.github.io/mkdocs-material/reference/abbreviations/","title":"Note"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#code","text":"\ucf54\ub4dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c ```kotlin ~~~ ``` \uacfc \uac19\uc740 \ud615\ud0dc\ub85c \ub098\ud0c0\ub294\ub2e4. fun main () { println ( \"hello world\" ) } ``` kotlin fun main () { println ( \"hello world\" ) } ```","title":"Code"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#code-highlight","text":"hl_lines=\"2\" \ub97c \uc774\uc6a9\ud574\uc11c \ucf54\ub4dc\uc5d0 highlight\ub97c \ub123\uc5c8\uc5b4\uc694 fun main () { println ( \"hello world\" ) } ``` kotlin hl_lines = \"2\" fun main () { println ( \"hello world\" ) } ```","title":"Code highlight"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#_9","text":"\uc544\ub798\uc640 \uac19\uc740 \ud615\ud0dc\ub97c \ud45c\ud604\ud558\ub824\uba74 gradle dependencies { coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5' } kotlin dependencies { coreLibraryDesugaring ( \"com.android.tools:desugar_jdk_libs:1.1.5\" ) } \ub2e4\uc74c markdown \ud30c\uc77c\uc744 \ucd9c\ub825\uc744 \ud558\uba74\ub41c\ub2e4. === \"gradle\" ``` groovy dependencies { coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5' } ``` === \"kotlin\" ``` kotlin dependencies { coreLibraryDesugaring ( \"com.android.tools:desugar_jdk_libs:1.1.5\" ) } ``` Warning \uc774 \ud615\ud0dc\ub97c \uc644\ubcbd\ud558\uac8c \uc9c0\uc6d0\ud558\ub294 notion\uc758 \ubb38\ubc95\uc740 \uc5c6\ub2e4 \ud604 \uc0c1\ud0dc\uc5d0\uc11c \uac00\uc7a5 \ube44\uc2b7\ud55c \ubb38\ubc95\uc740 \uc544\ub798\uc640 \uac19\ub2e4. \uc544\ub798\uc640 \uac19\uc774 \uc791\uc5c5\ud6c4 ```\uc2dc\uc791 \ubd80\ubd84\uacfc ```\ub05d\ubd80\ubd84\uc744 \ud0ed\uc73c\ub85c \ubc00\uc5b4\uc11c \uc218\uc815\ud558\ub294 \uac83\uc774\ub2e4 \ucd9c\ub825 \uacb0\uacfc\ubb3c === \"gradle\" ``` groovy dependencies { coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5' } ``` === \"kotlin\" ``` kotlin dependencies { coreLibraryDesugaring ( \"com.android.tools:desugar_jdk_libs:1.1.5\" ) } ``` \uc218\uc815\ud6c4 === \"gradle\" ``` groovy dependencies { coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5' } ``` === \"kotlin\" ``` kotlin dependencies { coreLibraryDesugaring ( \"com.android.tools:desugar_jdk_libs:1.1.5\" ) } ``` \ub2e4\uc74c\ubc29\ubc95\uc740 \ubaa9\ub85d\ud615\uc73c\ub85c \uc791\uc131\ud558\ub294\uac83\uc774\ub2e4. \ud1a0\uae00 \ud56d\ubaa9\uc73c\ub85c \uc791\uc131 Note \uc801\ub2f9\ud55c\uac83\uc744 \uc120\ud0dd\ud560\uc218 \ubc16\uc5d0 \uc5c6\ub2e4","title":"\uc120\ud0dd\ud615 \ucf54\ub4dc"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#_10","text":"notion \uc5d0\uc11c \uc124\uc815 \u2192 \ub0b4\ubcf4\ub0b4\uae30 \u2192 markdown\uc744 \uc0ac\uc6a9\ud574\uc11c \ub0b4\ubcf4\ub0b4\uba74 zip \ud615\ud0dc\ub85c \uc555\ucd95\ub41c \uc0c1\ud0dc\uc774\uace0 \ud574\ub2f9 \uc774\ubbf8\uc9c0 \ub9c1\ud06c\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uaddc\uce59\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc9c4\ub2e4. {\ubb38\uc11c\uc774\ub984}.mk {\ubb38\uc11c\uc774\ub984}+ +--- Untitled.png +--- Untitled 1.png +--- Untitled 2.png +--- ... +--- Untitled N.png \uadf8\ub9ac\uace0 \uc774 \ud30c\uc77c\uc744 build \ud558\uac8c \ub418\uba74 \uc544\ub798 \ud615\ud0dc\ub85c \ub098\uc628\ub2e4 {\ubb38\uc11c\uc774\ub984}+ +--- index.html +--- Untitled.png +--- Untitled 1.png +--- Untitled 2.png +--- ... +--- Untitled N.png \ub530\ub77c\uc11c \uc774\ubbf8\uc9c0\uc758 \uacbd\ub85c\ub97c \ubcc0\uacbd\ud574\uc904 \ud544\uc694\uac00 \uc788\ub294\ub370 \uc544\ub798 \uc815\uaddc\uc2dd\uc744 \ud1b5\ud574\uc11c \ubcc0\uacbd\ud558\uc790 \ucc3e\uae30 : !\\[Untitled\\]\\(.*\\/(Untitled(?:|%20\\d+))\\.png\\) \ubc14\uafb8\uae30 : ![Untitled]($1.png)","title":"\uc774\ubbf8\uc9c0 \ub9c1\ud06c"},{"location":"%EA%B0%9C%EB%B0%9C%20Blog%20%EB%A7%8C%EB%93%A4%EA%B8%B0%20ver%20MkDocs%20198e81690ca74900a498941b8d957ade/#another-page-link","text":"Index page Link [Index page Link][2] [2]: index.md","title":"Another Page Link"},{"location":"%EB%B9%8C%EB%93%9C%EC%8B%9C%EA%B0%84%EC%9D%84%20%ED%99%94%EB%A9%B4%EC%97%90%20%ED%91%9C%EC%8B%9C%ED%95%98%EA%B8%B0%20ce459388fabf40bcbe7e900c162eb8d1/","text":"\ube4c\ub4dc\uc2dc\uac04\uc744 \ud654\uba74\uc5d0 \ud45c\uc2dc\ud558\uae30 # Create: 2021\ub144 6\uc6d4 6\uc77c \uc624\ud6c4 9:55 Tag: android, tip \"\ub098\ub294 \ub124\uac00 \ube4c\ub4dc\ub41c \uc2dc\uac04\uc744 \uc54c\uace0 \uc2f6\ub2e4.\" # \ub77c\ub294 \ub2e8\uc21c\ud55c \uc695\ub9dd(?)\uc73c\ub85c \uc2dc\uc791\ud55c \uc77c\uc774\ub2e4. \ud558\uc9c0\ub9cc \uc0dd\uac01\ubcf4\ub2e4 \ud6a8\uacfc\uac00 \uc88b\uc558\uace0 \uc774\uac83\uc744 \uc774\uc6a9\ud574\uc11c \uc5b8\uc81c \uc124\uce58 \ud55c\uc9c0\ub3c4 \ubaa8\ub974\ub294 \uc571\uc744 \ub514\ubc84\uae45 \ud558\ub294 \uc77c\uc740 \uc5c6\uc5b4\uc84c\ub2e4. BuildConfig\uc5d0 \ube4c\ub4dc\uc2dc \ubcc0\uc218 \uc0bd\uc785(Groovy, KTS)\uc744 \ud574\uc11c \ud654\uba74\uc5d0 \uc774\uac83\uc744 \ubcf4\uc5ec\uc900\ub2e4. \ube4c\ub4dc \uc2dc\uac04\uc744 \ubcc0\uc218\ub85c \ub123\uace0 \uc2f6\uc744 \ub54c \ub77c\ub294 \uc0dd\uac01\uc73c\ub85c \uc2dc\uc791\ud55c \uc791\uc5c5 BuildConfig # build.gradle \uc758 defaultConfig \ubaa8\ub4e0 Build variants\uc5d0 \uc801\uc6a9\ub428 defaultConfig { applicationId \"your project\" minSdkVersion 26 targetSdkVersion 29 versionCode 1 versionName \"1.0\" buildConfigField \"String\" , \"SOME_KEY\" , '\"gDE4g5DFghsf5523HDSFdfg\"' buildConfigField ( \"String\" , \"SOME_KEY\" , '\"thisIsSomeKeyString\"' ) buildConfigField ( \"String\" , \"SOME_KEY\" , '\"\uc548\ub155\ud558\uc138\uc694.\\\\nhello bryan \uc785\ub2c8\ub2e4.\"' ) buildConfigField ( \"boolean\" , \"IS_TEST\" , \"true\" ) // boolean buildConfigField ( \"int\" , \"MAX_AGE\" , \"50\" ) // int } \ud2b9\uc815 \ube4c\ub4dc\uc5d0 \uc801\uc6a9\ud560\ub54c buildTypes { debug { minifyEnabled true proguardFiles getDefaultProguardFile ( 'proguard-android-optimize.txt' ), 'proguard-debug.pro' buildConfigField \"String\" , \"SOME_KEY\" , '\"debug\uc6a9 \ud0a4 \uc2a4\ud2b8\ub9c1\"' } release { minifyEnabled false proguardFiles getDefaultProguardFile ( 'proguard-android-optimize.txt' ), 'proguard-rules.pro' buildConfigField \"String\" , \"SOME_KEY\" , '\"release\uc6a9 \ud0a4 \uc2a4\ud2b8\ub9c1\"' } } \uc0ac\uc6a9\ubc29\ubc95 # String key = BuildConfig . SOME_KEY ; BuildConfig \ub294 \ubaa8\ub4c8\ub9c8\ub2e4 \uc791\uc131\ub41c\ub2e4. import \ub97c \ud655\uc778\ud574\uc11c \uc6d0\uce58 \uc54a\ub294 \uac83\uc744 \uac00\uc838\uc654\ub294\uc9c0 \ud655\uc778\ud558\uc790 TL;DR # build.gradle.kts import java.text.SimpleDateFormat import java.util.* android { buildTypes { getByName ( \"debug\" ) { buildConfigField ( \"String\" , \"BUILD_TIME\" , \"\"\"\"${SimpleDateFormat(\"MM.dd HH:mm\").format(Date())}\"\"\" \" ) } } } debug \uc5d0\uc11c\ub9cc \uc801\uc6a9 build.gradle android { buildTypes { debug { buildConfigField ( 'String' , 'BUILD_TIME' , \"\\\"${new Date().toLocalDateTime()}\\\"\" ) } } } \ubaa8\ub4e0\ube4c\ub4dc\uc5d0\uc801\uc6a9 android { defaultConfig { buildConfigField ( 'String' , 'BUILD_TIME' , \"\\\"${new Date().toLocalDateTime()}\\\"\" ) } }","title":"\ube4c\ub4dc\uc2dc\uac04\uc744 \ud654\uba74\uc5d0 \ud45c\uc2dc\ud558\uae30"},{"location":"%EB%B9%8C%EB%93%9C%EC%8B%9C%EA%B0%84%EC%9D%84%20%ED%99%94%EB%A9%B4%EC%97%90%20%ED%91%9C%EC%8B%9C%ED%95%98%EA%B8%B0%20ce459388fabf40bcbe7e900c162eb8d1/#_1","text":"Create: 2021\ub144 6\uc6d4 6\uc77c \uc624\ud6c4 9:55 Tag: android, tip","title":"\ube4c\ub4dc\uc2dc\uac04\uc744 \ud654\uba74\uc5d0 \ud45c\uc2dc\ud558\uae30"},{"location":"%EB%B9%8C%EB%93%9C%EC%8B%9C%EA%B0%84%EC%9D%84%20%ED%99%94%EB%A9%B4%EC%97%90%20%ED%91%9C%EC%8B%9C%ED%95%98%EA%B8%B0%20ce459388fabf40bcbe7e900c162eb8d1/#_2","text":"\ub77c\ub294 \ub2e8\uc21c\ud55c \uc695\ub9dd(?)\uc73c\ub85c \uc2dc\uc791\ud55c \uc77c\uc774\ub2e4. \ud558\uc9c0\ub9cc \uc0dd\uac01\ubcf4\ub2e4 \ud6a8\uacfc\uac00 \uc88b\uc558\uace0 \uc774\uac83\uc744 \uc774\uc6a9\ud574\uc11c \uc5b8\uc81c \uc124\uce58 \ud55c\uc9c0\ub3c4 \ubaa8\ub974\ub294 \uc571\uc744 \ub514\ubc84\uae45 \ud558\ub294 \uc77c\uc740 \uc5c6\uc5b4\uc84c\ub2e4. BuildConfig\uc5d0 \ube4c\ub4dc\uc2dc \ubcc0\uc218 \uc0bd\uc785(Groovy, KTS)\uc744 \ud574\uc11c \ud654\uba74\uc5d0 \uc774\uac83\uc744 \ubcf4\uc5ec\uc900\ub2e4. \ube4c\ub4dc \uc2dc\uac04\uc744 \ubcc0\uc218\ub85c \ub123\uace0 \uc2f6\uc744 \ub54c \ub77c\ub294 \uc0dd\uac01\uc73c\ub85c \uc2dc\uc791\ud55c \uc791\uc5c5","title":"\"\ub098\ub294 \ub124\uac00 \ube4c\ub4dc\ub41c \uc2dc\uac04\uc744 \uc54c\uace0 \uc2f6\ub2e4.\""},{"location":"%EB%B9%8C%EB%93%9C%EC%8B%9C%EA%B0%84%EC%9D%84%20%ED%99%94%EB%A9%B4%EC%97%90%20%ED%91%9C%EC%8B%9C%ED%95%98%EA%B8%B0%20ce459388fabf40bcbe7e900c162eb8d1/#buildconfig","text":"build.gradle \uc758 defaultConfig \ubaa8\ub4e0 Build variants\uc5d0 \uc801\uc6a9\ub428 defaultConfig { applicationId \"your project\" minSdkVersion 26 targetSdkVersion 29 versionCode 1 versionName \"1.0\" buildConfigField \"String\" , \"SOME_KEY\" , '\"gDE4g5DFghsf5523HDSFdfg\"' buildConfigField ( \"String\" , \"SOME_KEY\" , '\"thisIsSomeKeyString\"' ) buildConfigField ( \"String\" , \"SOME_KEY\" , '\"\uc548\ub155\ud558\uc138\uc694.\\\\nhello bryan \uc785\ub2c8\ub2e4.\"' ) buildConfigField ( \"boolean\" , \"IS_TEST\" , \"true\" ) // boolean buildConfigField ( \"int\" , \"MAX_AGE\" , \"50\" ) // int } \ud2b9\uc815 \ube4c\ub4dc\uc5d0 \uc801\uc6a9\ud560\ub54c buildTypes { debug { minifyEnabled true proguardFiles getDefaultProguardFile ( 'proguard-android-optimize.txt' ), 'proguard-debug.pro' buildConfigField \"String\" , \"SOME_KEY\" , '\"debug\uc6a9 \ud0a4 \uc2a4\ud2b8\ub9c1\"' } release { minifyEnabled false proguardFiles getDefaultProguardFile ( 'proguard-android-optimize.txt' ), 'proguard-rules.pro' buildConfigField \"String\" , \"SOME_KEY\" , '\"release\uc6a9 \ud0a4 \uc2a4\ud2b8\ub9c1\"' } }","title":"BuildConfig"},{"location":"%EB%B9%8C%EB%93%9C%EC%8B%9C%EA%B0%84%EC%9D%84%20%ED%99%94%EB%A9%B4%EC%97%90%20%ED%91%9C%EC%8B%9C%ED%95%98%EA%B8%B0%20ce459388fabf40bcbe7e900c162eb8d1/#_3","text":"String key = BuildConfig . SOME_KEY ; BuildConfig \ub294 \ubaa8\ub4c8\ub9c8\ub2e4 \uc791\uc131\ub41c\ub2e4. import \ub97c \ud655\uc778\ud574\uc11c \uc6d0\uce58 \uc54a\ub294 \uac83\uc744 \uac00\uc838\uc654\ub294\uc9c0 \ud655\uc778\ud558\uc790","title":"\uc0ac\uc6a9\ubc29\ubc95"},{"location":"%EB%B9%8C%EB%93%9C%EC%8B%9C%EA%B0%84%EC%9D%84%20%ED%99%94%EB%A9%B4%EC%97%90%20%ED%91%9C%EC%8B%9C%ED%95%98%EA%B8%B0%20ce459388fabf40bcbe7e900c162eb8d1/#tldr","text":"build.gradle.kts import java.text.SimpleDateFormat import java.util.* android { buildTypes { getByName ( \"debug\" ) { buildConfigField ( \"String\" , \"BUILD_TIME\" , \"\"\"\"${SimpleDateFormat(\"MM.dd HH:mm\").format(Date())}\"\"\" \" ) } } } debug \uc5d0\uc11c\ub9cc \uc801\uc6a9 build.gradle android { buildTypes { debug { buildConfigField ( 'String' , 'BUILD_TIME' , \"\\\"${new Date().toLocalDateTime()}\\\"\" ) } } } \ubaa8\ub4e0\ube4c\ub4dc\uc5d0\uc801\uc6a9 android { defaultConfig { buildConfigField ( 'String' , 'BUILD_TIME' , \"\\\"${new Date().toLocalDateTime()}\\\"\" ) } }","title":"TL;DR"}]}